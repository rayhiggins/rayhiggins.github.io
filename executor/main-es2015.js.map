{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/create-entity-instance/create-entity-instance.component.html","./src/app/domain-instance/domain-instance.component.html","./src/app/domain-instances/domain-instances.component.html","./src/app/domain-select/domain-select.component.html","./src/app/edit-field/edit-field.component.html","./src/app/entity-instance/entity-instance.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.settings.ts","./src/app/create-entity-instance/create-entity-instance.component.css","./src/app/create-entity-instance/create-entity-instance.component.ts","./src/app/domain-instance/domain-instance.component.css","./src/app/domain-instance/domain-instance.component.ts","./src/app/domain-instances/domain-instances.component.css","./src/app/domain-instances/domain-instances.component.ts","./src/app/domain-select/domain-select.component.css","./src/app/domain-select/domain-select.component.ts","./src/app/edit-field/edit-field.component.css","./src/app/edit-field/edit-field.component.ts","./src/app/entity-instance/entity-instance.component.css","./src/app/entity-instance/entity-instance.component.ts","./src/app/material-module.ts","./src/app/model/domain.instance.ts","./src/app/model/entity.entry.ts","./src/app/model/field.cardinality.model.ts","./src/app/model/field.entry.ts","./src/app/model/field.type.model.ts","./src/app/services/domain.instance.service.ts","./src/app/services/domain.model.service.ts","./src/app/services/entry.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \"<div *ngIf=\\\"initialized\\\">\\r\\n\\r\\n    <h3>{{entityModel.id}}</h3>\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h4 class=\\\"panel-title\\\">{{entityModel.id}}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n\\r\\n            <mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div *ngFor=\\\"let field of entityModel.fields\\\">\\r\\n                        <!--         <label class=\\\"control-label\\\" [for]=\\\"field.id\\\">{{field.id}}</label>\\r\\n\\r\\n              <div *ngFor=\\\"let value of getFieldValues(field.id).values\\\"> -->\\r\\n\\r\\n                        <div *ngIf=\\\"isText(field)\\\">\\r\\n\\r\\n                            <mat-form-field>\\r\\n                                <input matInput [placeholder]=\\\"field.id\\\" [formControlName]=\\\"field.id\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isNumber(field)\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input type=\\\"number\\\" matInput [placeholder]=\\\"field.id\\\" [formControlName]=\\\"field.id\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isDate(field)\\\">\\r\\n                            <mat-form-field>\\r\\n                                <input type=\\\"date\\\" matInput [placeholder]=\\\"field.id\\\" [formControlName]=\\\"field.id\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isBoolean(field)\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-select [placeholder]=\\\"field.id\\\" [formControlName]=\\\"field.id\\\">\\r\\n                                    <mat-option value=\\\"true\\\">\\r\\n                                        true\\r\\n                                    </mat-option>\\r\\n                                    <mat-option value=\\\"false\\\">\\r\\n                                        false\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                            <!--                            <mat-checkbox style=\\\"margin-left: 10px\\\" [formControlName]=\\\"field.id\\\">{{field.id}}\\r\\n                            </mat-checkbox>-->\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"isEnum(field) || isEntity(field)\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-select [placeholder]=\\\"field.id\\\" [formControlName]=\\\"field.id\\\">\\r\\n                                    <mat-option *ngFor=\\\"let referenceValue of getReferenceValues(field.id)\\\"\\r\\n                                        [value]=\\\"referenceValue\\\">\\r\\n                                        {{referenceValue}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </mat-dialog-content>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"panel-footer\\\">\\r\\n        <button class=\\\"mat-raised-button\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"form.invalid\\\"\\r\\n            (click)=\\\"saveEntity()\\\">Save</button>\\r\\n    </div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"entityModel\\\">\\n  <div style=\\\"background-color: rgb(186, 221, 231); text-align: center;  box-shadow: 10px 10px 5px grey;\\\">\\n    <h2 class=\\\"mat-h2\\\">{{domainInstance.id}}</h2>\\n    <nav class=\\\"navbar navbar-default\\\" style=\\\"background-color:rgb(186, 221, 231)\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"nav-item\\\" *ngFor=\\\"let entityInstances of domainInstance.listOfEntityInstances\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"[]\\\"\\n            (click)=\\\"displayEntity(entityInstances.modelId)\\\">{{entityInstances.modelId}}</a>\\n        </li>\\n      </ul>\\n    </nav>\\n  </div>\\n\\n  <div style=\\\"box-shadow: 10px 10px 5px grey\\\">\\n\\n    <div *ngIf=\\\"currentEntityInstances\\\">\\n\\n      <div class=\\\"panel panel-primary\\\" *ngIf=\\\"entityModel\\\">\\n\\n        <div class=\\\"panel-heading\\\">\\n          <div class=\\\"panel-title\\\">\\n            List of {{currentEntityInstances.modelId}} \\n          </div>\\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n          <button (click)=\\\"newEntityInstance()\\\" mat-raised-button color=\\\"primary\\\" style=\\\"margin-left: 10px\\\">Add</button>\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th *ngFor=\\\"let field of entityModel.fields\\\">{{field.id}}</th>\\n                <th>Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let entityInstance of currentEntityInstances.entityInstanceList\\\">\\n                <td *ngFor=\\\"let fieldInstances of entityInstance.listOfFieldInstances\\\">\\n                  {{fieldInstances.fieldInstanceList[0].value}}</td>\\n                <td>\\n                  <button (click)=\\\"deleteEntityInstance(entityInstance.tid)\\\" mat-raised-button\\n                    color=\\\"warn\\\">\\n                    <mat-icon>delete</mat-icon>\\n                  </button>\\n                  <button (click)=\\\"updateEntityInstance(entityInstance.tid)\\\" mat-raised-button color=\\\"accent\\\"\\n                    style=\\\"margin-left: 10px\\\">\\n                    <mat-icon>launch</mat-icon>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <div class=\\\"panel-title\\\">{{domainModelId}}: Domain-Instances </div>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n        <form #domainInstanceForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveDomainInstance(domainInstanceForm)\\\">\\n            <div class=\\\"panel panel-primary\\\">\\n                <div class=\\\"panel-body\\\">\\n                    <div class=\\\"form-group\\\" [class.has-error]=\\\"id.invalid && id.touched\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"id\\\">Id</label>\\n                        <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"newDomainInstance\\\" type=\\\"text\\\"\\n                            class=\\\"form-control\\\" #id=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"id.invalid && id.touched\\\">Id is required</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel-footer\\\">\\n                    <button mat-raised-button color = \\\"primary\\\" [disabled]=\\\"domainInstanceForm.invalid\\\">Add Domain Instance</button>\\n                </div>\\n\\n            </div>\\n\\n        </form>\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        <div class=\\\"panel panel-promary\\\" *ngIf=\\\"dataSource\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\n\\n                    <!-- ID Column -->\\n                    <ng-container cdkColumnDef=\\\"id\\\">\\n                        <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\n                        <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element}} </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"details\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Details </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"displayDomainInstance(element)\\\">\\n                                Details\\n                            </button>\\n                        </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"delete\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Delete </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteDomainInstance(element)\\\">\\n                                Delete\\n                            </button>\\n                        </td>\\n                    </ng-container>\\n\\n                    <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                    <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<h2>List of domain models</h2>\\r\\n\\r\\n<div class=\\\"panel panel-primary half\\\" *ngIf=\\\"dataSource\\\">\\r\\n  <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container cdkColumnDef=\\\"id\\\">\\r\\n      <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\r\\n      <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"details\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Details </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-raised-button  color = \\\"accent\\\" (click)=\\\"redirectToDetails(element.id)\\\">\\r\\n         Details\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","export default \"<label class=\\\"control-label\\\" [for]=\\\"field.id\\\">{{field.id}}</label>\\n<input [id]=\\\"field.id\\\" [name]=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"value\\\" [value]= \\\"value\\\"\\nclass=\\\"form-control\\\"/>\"","export default \"<div *ngIf=\\\"entityInstance\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">{{entityInstance.id}}</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let fieldInstances of entityInstance.listOfFieldInstances\\\">\\n\\n                <div class=\\\"col-xs-4\\\">{{fieldInstances.modelId}}</div>\\n\\n                <div class=\\\"col-xs-8\\\">\\n\\n                    <div *ngFor=\\\"let value of fieldInstances.fieldInstanceList\\\">\\n                        {{value.value}}\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DomainSelectComponent } from './domain-select/domain-select.component';\r\nimport { DomainInstancesComponent } from './domain-instances/domain-instances.component';\r\nimport { DomainInstanceComponent } from './domain-instance/domain-instance.component';\r\n\r\n\r\n\r\nconst routes: Routes  = [\r\n  { path: 'domainSelect', component: DomainSelectComponent },\r\n  { path: 'domainInstances/:domainId', component: DomainInstancesComponent },\r\n  { path: 'domainInstance/:domainId/:domainInstanceId', component: DomainInstanceComponent },\r\n  { path: '', redirectTo: '/domainSelect', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'DomainStructExecutor';\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { forwardRef, NgModule } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CreateEntityInstanceComponent } from './create-entity-instance/create-entity-instance.component';\r\nimport { DomainInstanceComponent } from './domain-instance/domain-instance.component';\r\nimport { DomainInstancesComponent } from './domain-instances/domain-instances.component';\r\nimport { DomainSelectComponent } from './domain-select/domain-select.component';\r\nimport { EditFieldComponent } from './edit-field/edit-field.component';\r\nimport { EntityInstanceComponent } from './entity-instance/entity-instance.component';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DomainSelectComponent,\r\n    DomainInstancesComponent,\r\n    DomainInstanceComponent,\r\n    CreateEntityInstanceComponent,\r\n    EntityInstanceComponent,\r\n    EditFieldComponent\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule\r\n  ],entryComponents: [\r\n      CreateEntityInstanceComponent\r\n    ],\r\n  providers: [\r\n      {\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() =>EditFieldComponent),\r\n        multi: true\r\n      },\r\n      { provide: MAT_DIALOG_DATA, useValue: {} },\r\n      { provide: MatDialogRef, useValue: {} }\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class AppSettings {\r\n    public static CRUD_APP_ENDPOINT='https://crud-app-builder.herokuapp.com'; //'http://localhost:8080/';\r\n }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1lbnRpdHktaW5zdGFuY2UvY3JlYXRlLWVudGl0eS1pbnN0YW5jZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, EventEmitter, Input, OnInit, Output, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { DomainModel } from '../model/domain.model';\nimport { EntityEntry } from '../model/entity.entry';\nimport { EntityInstance } from '../model/entity.instance';\nimport { DomainEntityModel } from '../model/entity.model';\nimport { DomainEnumModel } from '../model/enum.model';\nimport { FieldCardinality } from '../model/field.cardinality.model';\nimport { FieldEntry } from '../model/field.entry';\nimport { FieldInstances } from '../model/field.instances';\nimport { DomainEntityFieldModel } from '../model/field.model';\nimport { FieldType } from '../model/field.type.model';\nimport { DomainInstanceService } from '../services/domain.instance.service';\nimport { DomainModelService } from '../services/domain.model.service';\nimport { EntryService } from '../services/entry.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface DialogData {\n  domainModel: DomainModel;\n  entityModel: DomainEntityModel;\n  domainInstanceId: string;\n  entityInstance: EntityInstance;\n}\n\n@Component({\n  selector: 'app-create-entity-instance',\n  templateUrl: './create-entity-instance.component.html',\n  styleUrls: ['./create-entity-instance.component.css'],\n})\nexport class CreateEntityInstanceComponent implements OnInit {\n\n  form: FormGroup;\n\n  @Input() domainModel: DomainModel;\n  @Input() domainInstanceId: string;\n  @Input() entityModel: DomainEntityModel;\n  @Input() entityInstance: EntityInstance;\n  @Output() notify = new EventEmitter();\n\n  fieldMap: Map<string, FieldValues> = new Map<string, FieldValues>();\n\n  referenceValuesMap: Map<string, string[]> = new Map<string, string[]>();\n\n  initialized: boolean = false;\n\n\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private domainService: DomainModelService, private domainInstanceService: DomainInstanceService\n    , private entryService: EntryService, public dialogRef: MatDialogRef<CreateEntityInstanceComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit() {\n    {\n\n      if (this.data) {\n        this.domainModel = this.data.domainModel;\n        this.domainInstanceId = this.data.domainInstanceId;\n        this.entityInstance = this.data.entityInstance;\n        this.entityModel = this.data.entityModel;\n      }\n\n      const group = {};\n      this.entityModel.fields.forEach(field => {\n\n        this.updateFormControls(field, group);\n\n      });\n\n      this.form = new FormGroup(group);\n\n      this.initialized = true;\n    }\n  }\n\n  private updateFormControls(field: DomainEntityFieldModel, group: {}) {\n    var value: String;\n    if (this.entityInstance) {\n      const fieldInstances: FieldInstances = this.domainInstanceService.getFieldInstances(this.entityInstance, field.id);\n      if (fieldInstances.fieldInstanceList[0]) {\n        value = fieldInstances.fieldInstanceList[0].value;\n      }\n      else {\n        value = \"\";\n      }\n    }\n    else {\n      value = \"\";\n    }\n    group[field.id] = new FormControl(value);\n    if (field.type == FieldType.ENUM) {\n      const referenceEnum: DomainEnumModel = this.domainService.getEnum(this.domainModel, field.referenceId);\n      this.referenceValuesMap.set(field.id, referenceEnum.enumInstances);\n    }\n    else if (field.type == FieldType.ENTITY) {\n      const referenceEntity: DomainEntityModel = this.domainService.getEntity(this.domainModel, field.referenceId);\n      this.entryService.readEntityInstances(this.domainModel.id, this.domainInstanceId, referenceEntity.id).subscribe(entries => {\n        const referenceValues: string[] = entries.map(e => e.instanceId);\n        this.referenceValuesMap.set(field.id, referenceValues);\n      });\n    }\n  }\n\n  getReferenceValues(fieldId: string) {\n    return this.referenceValuesMap.get(fieldId);\n  }\n\n\n\n  updateValues(field: DomainEntityFieldModel) {\n\n    const values: Value[] = this.createValues(field);\n\n\n    var fieldValues: FieldValues = new FieldValues();\n    fieldValues.values = values;\n    fieldValues.field = field;\n\n    this.updateReferenceValues(fieldValues, field);\n\n    this.fieldMap.set(field.id, fieldValues);\n  }\n\n  private updateReferenceValues(fieldValues: FieldValues, field: DomainEntityFieldModel): void {\n\n    if (field.type == FieldType.ENTITY) {\n      const referenceEntity: DomainEntityModel = this.domainService.getEntity(this.domainModel, field.referenceId);\n      this.entryService.readEntityInstances(this.domainModel.id, this.domainInstanceId, referenceEntity.id).subscribe(entries => {\n        fieldValues.referenceValues = entries.map(e => e.instanceId);\n      });\n    } else if (field.type == FieldType.ENUM) {\n      const referenceEnum: DomainEnumModel = this.domainService.getEnum(this.domainModel, field.referenceId);\n      fieldValues.referenceValues = referenceEnum.enumInstances;\n    } else {\n      fieldValues.referenceValues = [];\n    }\n  }\n\n  private createValues(field: DomainEntityFieldModel) {\n    var values: Value[];\n    if (this.entityInstance) {\n      const fieldInstances: FieldInstances = this.domainInstanceService.getFieldInstances(this.entityInstance, field.id);\n\n      var pos: number = 0;\n      values = fieldInstances.fieldInstanceList.map(i => {\n        const value: Value = new Value(pos++);\n        value.value = i.value;\n        return value;\n      })\n    }\n    else {\n      values = [new Value(0)];\n    }\n    console.log(field.id + \" \" + JSON.stringify(values));\n    return values;\n  }\n\n  ngOnChanges() {\n    // create header using child_id\n    this.ngOnInit();\n  }\n\n  saveEntity(): void {\n\n    const entityEntry: EntityEntry = new EntityEntry();\n\n    if (this.entityInstance) {\n      entityEntry.id = this.entityInstance.tid;\n    }\n    entityEntry.modelTid = this.entityModel.tid;\n    entityEntry.fieldEntries = [];\n\n    const identifierField: DomainEntityFieldModel = this.domainService.getIdentifierField(this.entityModel);\n    this.fieldMap.forEach((fieldValues: FieldValues, key: string) => {\n      fieldValues.values.forEach(v => {\n        const fieldEntry: FieldEntry = new FieldEntry();\n        fieldEntry.modelId = key;\n\n        fieldEntry.value = v.value;\n        if (key == identifierField.id) {\n          entityEntry.instanceId = v.value;\n        }\n        entityEntry.fieldEntries.push(fieldEntry);\n      })\n\n    })\n\n    this.entityModel.fields.forEach(field => {\n      const fieldEntry: FieldEntry = new FieldEntry();\n      fieldEntry.modelId = field.id;\n      fieldEntry.value = this.form.value[fieldEntry.modelId];\n      if (field.identifier) {\n        entityEntry.instanceId = fieldEntry.value;\n      }\n      entityEntry.fieldEntries.push(fieldEntry);\n    })\n    if (this.entityInstance != null) {\n\n      console.log(\"this.entityInstance.tid; \"+entityEntry.id);\n\n\n      this.entryService.updateEntityEntry(this.domainModel.tid, this.domainInstanceId, entityEntry).subscribe(data => {\n        this.notify.emit();\n      });\n    } else {\n      this.entryService.addNewEntityEntry(this.domainModel.tid, this.domainInstanceId, entityEntry).subscribe(data => {\n        this.notify.emit();\n      });\n    }\n\n    if (this.data) {\n      if (this.data) {\n        this.dialogRef.close(true);\n      } \n    }\n  }\n\n\n  back() {\n    if (this.data) {\n      this.dialogRef.close(false);\n    } \n  }\n\n\n  isText(field: DomainEntityFieldModel): boolean {\n    return field.type == FieldType.TEXT;\n  }\n  isNumber(field: DomainEntityFieldModel): boolean {\n    return field.type == FieldType.NUMBER;\n  }\n  isDate(field: DomainEntityFieldModel): boolean {\n    return field.type == FieldType.DATE;\n  }\n  isBoolean(field: DomainEntityFieldModel): boolean {\n    return field.type == FieldType.BOOLEAN;\n  }\n  isEnum(field: DomainEntityFieldModel): boolean {\n    return field.type == FieldType.ENUM;\n  }\n  isEntity(field: DomainEntityFieldModel): boolean {\n    return field.type == FieldType.ENTITY;\n  }\n\n}\n\n\nclass FieldValues {\n  values: Value[] = [new Value(0)];\n  field: DomainEntityFieldModel;\n  referenceValues: string[] = [];\n\n  isRequired(): boolean {\n    return !this.field.optional;\n  }\n\n\n  getValue(i: number): Value {\n    console.log(\"getValue()\" + i + \">>\" + JSON.stringify(this.values));\n    if (this.values == undefined || this.values[i] == undefined) {\n      const value: Value = new Value(i);\n      console.log(\"i: \" + i);\n      console.log(\"this.referenceValues: \" + this.referenceValues);\n\n\n      this.values[i] = value;\n      console.log(\"this.values[i]: \" + this.values[i]);\n      return value;\n\n    }\n    const value = this.values[i];\n    console.log(\"VALUE: \" + value);\n    return value;\n\n  }\n\n  addValue(): void {\n    this.values.push(new Value(this.values.length));\n  }\n\n  isSingleValue(): boolean {\n\n    const singleValue: boolean = this.field.cardinality == FieldCardinality.ONE_TO_ONE || this.field.cardinality == FieldCardinality.MANY_TO_ONE;\n\n    return singleValue;\n  }\n}\n\nclass Value {\n\n  constructor(public position: number) {\n  }\n\n  value: string;\n}","export default \"div.sticky {\\r\\n    position: -webkit-sticky;\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    background-color: yellow;\\r\\n    padding: 50px;\\r\\n    font-size: 20px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9tYWluLWluc3RhbmNlL2RvbWFpbi1pbnN0YW5jZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksd0JBQXdCO0lBQ3hCLGVBQWU7SUFDZixNQUFNO0lBQ04sd0JBQXdCO0lBQ3hCLGFBQWE7SUFDYixlQUFlO0VBQ2pCIiwiZmlsZSI6InNyYy9hcHAvZG9tYWluLWluc3RhbmNlL2RvbWFpbi1pbnN0YW5jZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LnN0aWNreSB7XHJcbiAgICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XHJcbiAgICBwYWRkaW5nOiA1MHB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DomainInstance } from '../model/domain.instance';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DomainInstanceService } from '../services/domain.instance.service';\nimport { EntityInstances } from '../model/entity.instances';\nimport { EntityInstance } from '../model/entity.instance';\nimport { EntryService } from '../services/entry.service';\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { CreateEntityInstanceComponent } from '../create-entity-instance/create-entity-instance.component';\nimport { DomainEntityModel } from '../model/entity.model';\nimport { DomainModel } from '../model/domain.model';\nimport { DomainModelService } from '../services/domain.model.service';\n\n@Component({\n  selector: 'app-domain-instance',\n  templateUrl: './domain-instance.component.html',\n  styleUrls: ['./domain-instance.component.css']\n})\nexport class DomainInstanceComponent implements OnInit {\n\n  domainModel: DomainModel;\n  entityModel: DomainEntityModel;\n  domainInstance: DomainInstance;\n  currentEntityInstances: EntityInstances;\n  selectedEntityInstance: EntityInstance;\n  selectedEntityModelId: string;\n\n  constructor(private router: Router, private route: ActivatedRoute, private domainInstanceService: DomainInstanceService, private entryService: EntryService, private domainModelService: DomainModelService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const domainModelId: string = params.get('domainId');\n      const domainInstanceId: string = params.get('domainInstanceId');\n\n      console.log(\">>>>++++\" + domainModelId +\" \"+domainInstanceId);\n\n      this.domainInstanceService.getDomainInstance(domainModelId, domainInstanceId).subscribe(\n\n        (response) => {\n          console.log(\"response\"+JSON.stringify(response));\n\n          this.domainInstance = response;\n          if (this.selectedEntityModelId == undefined) {\n\n            const entityInstances: EntityInstances[] = this.domainInstance.listOfEntityInstances;\n\n            if (this.currentEntityInstances == null && entityInstances != null && entityInstances.length > 0) {\n              this.currentEntityInstances = entityInstances[0];\n              this.selectedEntityModelId = this.currentEntityInstances.modelId;\n            }\n          }\n          this.updateCurrentEntityInstances();\n       \n      this.domainModelService.getDomain(domainModelId).subscribe(\n        (response) => {\n          this.domainModel = response;\n          console.log(\"read entityModel: \"+this.domainModel+\"/\"+this.selectedEntityModelId);\n          this.entityModel = this.domainModelService.getEntity(this.domainModel, this.selectedEntityModelId);\n          console.log(\"entityModel: \"+this.entityModel);\n\n        });\n    \n        }\n      )\n\n    });\n  }\n\n  displayEntity(modelId: string) {\n    this.selectedEntityModelId = modelId;\n    this.ngOnInit();\n  }\n\n  updateCurrentEntityInstances(): void {\n    this.currentEntityInstances = this.domainInstance.listOfEntityInstances.filter(e => e.modelId == this.selectedEntityModelId)[0];\n  }\n\n  newEntityInstance() {\n    this.displayEntityInstance(null);\n  }\n\n  updateEntityInstance(entityInstanceTid: number) {\n    this.displayEntityInstance(entityInstanceTid);\n  }\n\n  private displayEntityInstance(entityInstanceTid: number) {\n\n\n    if (entityInstanceTid) {\n      this.selectedEntityInstance = this.currentEntityInstances.entityInstanceList.filter(e => e.tid == entityInstanceTid)[0];\n    } else {\n      this.selectedEntityInstance = null;\n    }\n \n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.width = '400px';\n    dialogConfig.data = {\n\n      domainModel: this.domainModel,\n      domainInstanceId: this.domainInstance.id,\n      entityModel: this.entityModel,\n      entityInstance: this.selectedEntityInstance\n    };\n\n    const dialogRef = this.dialog.open(CreateEntityInstanceComponent, dialogConfig);\n\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result) {\n        this.reload();\n      }\n\n    }); \n \n \n  }\n\n  deleteEntityInstance(entityInstanceTid: number) {\n    this.entryService.deleteEntityInstance(this.domainInstance.modelId, this.domainInstance.id, this.currentEntityInstances.modelId, entityInstanceTid).subscribe(\n      (response) => {\n        this.reload();\n      }\n    )\n  }\n\n  onNotify() {\n    this.reload();\n  }\n\n  reload() {\n    console.log(\"reload\");\n    this.currentEntityInstances = null;\n    this.selectedEntityInstance = null;\n    this.ngOnInit();\n  }\n\n\n}\n","export default \"h3 {\\r\\n    background-color: cornflowerblue;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9tYWluLWluc3RhbmNlcy9kb21haW4taW5zdGFuY2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQ0FBZ0M7SUFDaEMsWUFBWTtJQUNaLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2RvbWFpbi1pbnN0YW5jZXMvZG9tYWluLWluc3RhbmNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDMge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY29ybmZsb3dlcmJsdWU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DomainModel } from '../model/domain.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DomainModelService } from '../services/domain.model.service';\nimport { DomainInstanceService } from '../services/domain.instance.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { stringify } from 'querystring';\n\n@Component({\n  selector: 'app-domain-instances',\n  templateUrl: './domain-instances.component.html',\n  styleUrls: ['./domain-instances.component.css']\n})\nexport class DomainInstancesComponent implements OnInit {\n\n  domainModelId: string;\n\n  newDomainInstance: string;\n\n  displayedColumns: string[] = ['id', 'delete', 'details'];\n  dataSource;\n\n  constructor(private route: ActivatedRoute, private router: Router, private domainInstanceService: DomainInstanceService) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.domainModelId = params.get('domainId');\n      console.log(\"read instances of \" + this.domainModelId);\n\n      this.domainInstanceService.getDomainInstanceIds(this.domainModelId).subscribe(\n\n        (response) => {\n          this.dataSource = new MatTableDataSource<String>();\n          this.dataSource.data =  response;\n        }\n      )\n\n    })\n\n\n\n  }\n\n  saveDomainInstance(): void {\n    console.log(this.newDomainInstance);\n\n    this.domainInstanceService.addDomainInstance(this.domainModelId, this.newDomainInstance).subscribe(data => {\n      console.log(\"data after Post: \" + data);\n      this.ngOnInit();\n\n    });\n\n  }\n\n  deleteDomainInstance(domainInstanceId: string) {\n    this.domainInstanceService.deleteDomainInstance(this.domainModelId, domainInstanceId).subscribe(data => {\n      console.log(\"data after Delete: \" + data);\n      this.ngOnInit();\n\n    });\n  }\n\n  displayDomainInstance(domainInstanceId: String) {\n    console.log(\"displayDomainInstance: \" + domainInstanceId);\n    this.router.navigate([\"domainInstance\", this.domainModelId, domainInstanceId]);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RvbWFpbi1zZWxlY3QvZG9tYWluLXNlbGVjdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { Router } from '@angular/router';\r\nimport { DomainModelService } from '../services/domain.model.service';\r\n\r\n@Component({\r\n  selector: 'app-domain-select',\r\n  templateUrl: './domain-select.component.html',\r\n  styleUrls: ['./domain-select.component.css']\r\n})\r\nexport class DomainSelectComponent implements OnInit {\r\n\r\n  domains: DomainModel[];\r\n\r\n  displayedColumns: string[] = ['id', 'details'];\r\n  dataSource;\r\n\r\n  constructor(private router: Router, private _domainService: DomainModelService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this._domainService.getDomains().subscribe(\r\n\r\n      (response) => {\r\n        this.domains = response;\r\n        console.log(\"Domain-List: \" + this.domains);\r\n        this.dataSource = this.domains;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  public redirectToDetails = (id: string) => {\r\n    this.router.navigate([\"domainInstances\", id]);\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtZmllbGQvZWRpdC1maWVsZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DomainEntityFieldModel } from '../model/field.model';\nimport { ControlValueAccessor } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-edit-field',\n  templateUrl: './edit-field.component.html',\n  styleUrls: ['./edit-field.component.css']\n  \n})\nexport class EditFieldComponent implements ControlValueAccessor  {\n\n  @Input() field: DomainEntityFieldModel;\n  @Input()\n  name: string;\n  @Input('value')\n  val: string;\n  @Output() inputModelChange = new EventEmitter<string>();\n\n  constructor() { }\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n\n  ngOnInit() {\n  }\n\n  \n  get value() {\n    console.log(\"  get value() \");\n    return this.val;\n  }\n\n  set value(val) {\n    console.log(\"  set value() \"+ val);\n    this.val = val;\n    this.onChange(val);\n    this.onTouched();\n  }\n  // We implement this method to keep a reference to the onChange\n  // callback function passed by the forms API\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  // We implement this method to keep a reference to the onTouched\n  //callback function passed by the forms API\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  // This is a basic setter that the forms API is going to use\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0eS1pbnN0YW5jZS9lbnRpdHktaW5zdGFuY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { EntityInstance } from '../model/entity.instance';\n\n@Component({\n  selector: 'app-entity-instance',\n  templateUrl: './entity-instance.component.html',\n  styleUrls: ['./entity-instance.component.css']\n})\nexport class EntityInstanceComponent implements OnInit {\n\n  @Input() entityInstance: EntityInstance;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { EntityInstances } from './entity.instances';\r\n\r\nexport class DomainInstance {\r\n    id: string;\r\n    modelId: string;\r\n    listOfEntityInstances: EntityInstances[];  \r\n}","import { EntityInstances } from './entity.instances';\r\nimport { FieldEntry } from './field.entry';\r\n\r\nexport class EntityEntry {\r\n\r\n\r\n    id: number;\r\n    modelTid: number;\r\n    instanceId: string;  \r\n    fieldEntries: FieldEntry[];\r\n}","export enum FieldCardinality {\r\n    ONE_TO_ONE = \"ONE_TO_ONE\",\r\n\tONE_TO_MANY = \"ONE_TO_MANY\",\r\n\tMANY_TO_ONE = \"MANY_TO_ONE\",\r\n\tMANY_TO_MANY = \"MANY_TO_MANY\"\r\n}","import { EntityInstances } from './entity.instances';\r\n\r\nexport class FieldEntry {\r\n    modelId: string;\r\n    value: string;  \r\n}","export enum FieldType {\r\n\r\n    TEXT=\"TEXT\",\r\n    NUMBER=\"NUMBER\",\r\n    DATE=\"DATE\",\r\n    BOOLEAN=\"BOOLEAN\",\r\n    ENTITY=\"ENTITY\",\r\n    ENUM=\"ENUM\"\r\n    \r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppSettings } from '../app.settings';\r\nimport { DomainInstance } from '../model/domain.instance';\r\nimport { EntityInstance } from '../model/entity.instance';\r\nimport { FieldInstances } from '../model/field.instances';\r\n\r\ninterface Response {\r\n    result: string[];\r\n  }\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class DomainInstanceService {\r\n\r\n    constructor(private http: HttpClient) {\r\n       }\r\n\r\n\r\n    public addDomainInstance(domainId: string, domainInstanceId: string) : Observable<DomainInstance> {\r\n\r\n        var domainInstance: DomainInstance;\r\n        domainInstance = new DomainInstance;\r\n        domainInstance.id = domainInstanceId;\r\n\r\n        let obs : Observable<DomainInstance> = this.http.post<DomainInstance>(AppSettings.CRUD_APP_ENDPOINT+'/instance/'+domainId, domainInstance);\r\n        return obs;\r\n    }\r\n\r\n    public getDomainInstanceIds(domainId: string): Observable<string[]> {\r\n\r\n        let obs: Observable<string[]> = \r\n            this.http.get<Response>(AppSettings.CRUD_APP_ENDPOINT+'/instance/instanceIds/'+domainId).pipe(map(res => res.result));\r\n        \r\n        return obs;\r\n      }\r\n\r\n      public getDomainInstance(domainId: string, domainInstanceId: string): Observable<DomainInstance> {\r\n\r\n        let obs: Observable<DomainInstance> = \r\n            this.http.get<DomainInstance>(AppSettings.CRUD_APP_ENDPOINT+'/structure/'+domainId+'/'+domainInstanceId);\r\n        \r\n        return obs;\r\n      }\r\n\r\n      \r\n\r\n    public deleteDomainInstance(domainId: string, domainInstanceId: string): Observable<DomainInstance> {\r\n\r\n        let obs: Observable<DomainInstance> = \r\n            this.http.delete<DomainInstance>(AppSettings.CRUD_APP_ENDPOINT+'/instance/'+domainId+'/'+domainInstanceId);\r\n        \r\n        return obs;\r\n      }\r\n\r\n      public getFieldInstances(entityInstance: EntityInstance, fieldId: string): FieldInstances {\r\n        const foundFieldInstances: FieldInstances[] = entityInstance.listOfFieldInstances.filter(f => fieldId == f.modelId);\r\n        return foundFieldInstances.length > 0 ? foundFieldInstances[0] : null;        \r\n\r\n      }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DomainModel } from '../model/domain.model';\nimport { map } from 'rxjs/operators';\nimport { DomainEntityModel } from '../model/entity.model';\nimport { DomainEntityFieldModel } from '../model/field.model';\nimport { FieldCardinality } from '../model/field.cardinality.model';\nimport { DomainEnumModel } from '../model/enum.model';\nimport { AppSettings } from '../app.settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomainModelService {\n\n  constructor(private http: HttpClient) { }\n\n  public getDomains(): Observable<DomainModel[]> {\n\n    let obs: Observable<DomainModel[]> = this.http.get<DomainModel[]>(AppSettings.CRUD_APP_ENDPOINT+'/models/');\n\n\n    return obs;\n  }\n\n  public getDomain(domainId: String): Observable<DomainModel> {\n\n    let obs: Observable<DomainModel> = this.http.get<DomainModel>(AppSettings.CRUD_APP_ENDPOINT+'/models/' + domainId);\n\n    return obs;\n\n  }\n\n  getEntity(domainModel: DomainModel, entityModelId: string): DomainEntityModel {\n    const foundEntities: DomainEntityModel[] = domainModel.entities.filter(e => entityModelId == e.id);\n    return foundEntities.length > 0 ? foundEntities[0] : null;\n  }\n\n  getEnum(domainModel: DomainModel, enumModelId: string): DomainEnumModel {\n    const foundEntities: DomainEnumModel[] = domainModel.enums.filter(e => enumModelId == e.id);\n    return foundEntities.length > 0 ? foundEntities[0] : null;\n  }\n\n\n\n  getField(entityModel: DomainEntityModel, fieldModelId: string): DomainEntityFieldModel {\n    const foundFields: DomainEntityFieldModel[] = entityModel.fields.filter(f => fieldModelId == f.id);\n    return foundFields.length > 0 ? foundFields[0] : null;\n  }\n\n  getIdentifierField(entityModel: DomainEntityModel): DomainEntityFieldModel {\n    return entityModel.fields.filter(f => f.identifier)[0];\n  }\n\n  singleValue(field: DomainEntityFieldModel): boolean {\n    return field.cardinality == FieldCardinality.ONE_TO_ONE || field.cardinality == FieldCardinality.MANY_TO_ONE\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DomainInstance } from '../model/domain.instance';\r\nimport { map } from 'rxjs/operators';\r\nimport { EntityInstances } from '../model/entity.instances';\r\nimport { EntityEntry } from '../model/entity.entry';\r\nimport { AppSettings } from '../app.settings';\r\n\r\n\r\ninterface Response {\r\n  result: string[];\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  public addNewEntityEntry(domainTid: number, domainInstanceId: string, entityEntry: EntityEntry): Observable<EntityEntry> {\r\n\r\n    let obs: Observable<EntityEntry> = this.http.post<EntityEntry>(AppSettings.CRUD_APP_ENDPOINT + '/entries/' + domainTid + \"/\" + domainInstanceId, entityEntry);\r\n    return obs;\r\n  }\r\n\r\n\r\n  public updateEntityEntry(domainTid: number, domainInstanceId: string, entityEntry: EntityEntry): Observable<EntityEntry> {\r\n\r\n    let obs: Observable<EntityEntry> = this.http.put<EntityEntry>(AppSettings.CRUD_APP_ENDPOINT + '/entries/' + domainTid + \"/\" + domainInstanceId + \"/\" + entityEntry.modelTid+ \"/\" + entityEntry.id, entityEntry);\r\n    return obs;\r\n  }\r\n\r\n  public getDomainInstanceIds(domainId: string): Observable<string[]> {\r\n\r\n    let obs: Observable<string[]> =\r\n      this.http.get<Response>(AppSettings.CRUD_APP_ENDPOINT+'/instance/instanceIds/' + domainId).pipe(map(res => res.result));\r\n\r\n    return obs;\r\n  }\r\n\r\n  public getDomainInstance(domainId: string, domainInstanceId: string): Observable<DomainInstance> {\r\n\r\n    let obs: Observable<DomainInstance> =\r\n      this.http.get<DomainInstance>(AppSettings.CRUD_APP_ENDPOINT+'/structure/' + domainId + '/' + domainInstanceId);\r\n\r\n    return obs;\r\n  }\r\n\r\n\r\n\r\n  public deleteDomainInstance(domainModelId: string, domainInstanceId: string): Observable<DomainInstance> {\r\n\r\n    let obs: Observable<DomainInstance> =\r\n      this.http.delete<DomainInstance>(AppSettings.CRUD_APP_ENDPOINT+'/instance/' + domainModelId + '/' + domainInstanceId);\r\n\r\n    return obs;\r\n  }\r\n  public deleteEntityInstance(domainModelId: string, domainInstanceId: string, entityModelId: String, entityInstanceTid: number): Observable<DomainInstance> {\r\n    console.log(\"delete>>> \"+ AppSettings.CRUD_APP_ENDPOINT+'/instance/' + domainModelId + '/' + domainInstanceId + '/' + entityModelId + '/' + entityInstanceTid);\r\n    let obs: Observable<DomainInstance> =\r\n      this.http.delete<DomainInstance>(AppSettings.CRUD_APP_ENDPOINT+'/instance/' + domainModelId + '/' + domainInstanceId + '/' + entityModelId + '/' + entityInstanceTid);\r\n    return obs;\r\n  }\r\n  public readEntityInstances(domainModelId: string, domainInstanceId: string, entityModelId: String): Observable<EntityEntry[]> {\r\n\r\n    let obs: Observable<EntityEntry[]> =\r\n      this.http.get<EntityEntry[]>(AppSettings.CRUD_APP_ENDPOINT+'/entries/' + domainModelId + '/' + domainInstanceId + '/' + entityModelId);\r\n    return obs;\r\n  }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}