{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/domains/display-domain.component.html","src/app/domains/edit-domain-id-dialog.html","src/app/domains/list-domains.component.html","src/app/entities/create-entity.component.html","src/app/entities/create-field.component.html","src/app/entities/display-entity.component.html","src/app/entities/display-field.component.html","src/app/entities/edit-entity-id-dialog.html","src/app/entities/list-entities.component.html","src/app/enum/create-enum.component.html","src/app/enum/display-enum.component.html","src/app/enum/edit-enum-id-dialog.html","node_modules/tslib/tslib.es6.js","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/domains/display-domain.component.css","src/app/domains/display-domain.component.ts","src/app/domains/domain.service.ts","src/app/domains/list-domains.component.css","src/app/domains/list-domains.component.ts","src/app/entities/create-entity.component.css","src/app/entities/create-entity.component.ts","src/app/entities/create-field.component.css","src/app/entities/create-field.component.ts","src/app/entities/display-entity.component.css","src/app/entities/display-entity.component.ts","src/app/entities/display-field.component.css","src/app/entities/display-field.component.ts","src/app/entities/entity.service.ts","src/app/entities/list-entities.component.css","src/app/entities/list-entities.component.ts","src/app/enum/create-enum.component.css","src/app/enum/create-enum.component.ts","src/app/enum/display-enum.component.css","src/app/enum/display-enum.component.ts","src/app/enum/enum.service.ts","src/app/material-module.ts","src/app/model/field.cardinality.model.ts","src/app/model/field.model.ts","src/app/model/field.type.model.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"mat-app-background basic-container\\\">\\r\\n  <div style=\\\"background-color: whitesmoke; text-align: center;  box-shadow: 10px 10px 5px grey\\\">\\r\\n    <h2 class=\\\"mat-h2\\\">CRUD Model Builder</h2>\\r\\n\\r\\n    <nav class=\\\"navbar navbar-default\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"listDomains\\\">Domain-List</a>\\r\\n        </li>\\r\\n        <li>\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"listEntities\\\">Domain</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </nav>\\r\\n  </div>\\r\\n  <div style=\\\"box-shadow: 10px 10px 5px grey\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <br>\\r\\n  </div>\\r\\n\\r\\n</div>\"","export default \"<div *ngIf=\\\"domain\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <div class=\\\"panel-title\\\">{{domain.id}}\\n                <button style=\\\"margin-left: 3px\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\"\\n                    mat-mini-fab (click)=\\\"openDialogChangeDomainId()\\\">\\n                    <mat-icon>create</mat-icon>\\n                </button>\\n                <button style=\\\"float: right;\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\"\\n                    mat-mini-fab (click)=\\\"back()\\\">\\n                    <mat-icon>arrow_back</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n\\n        <mat-tab-group>\\n            <mat-tab label=\\\"Entities\\\">\\n\\n                <div class=\\\"panel-body\\\">\\n\\n                    <app-create-entity [domainTid]=\\\"domain.tid\\\" (notify)=\\\"onNotifyEntity($event)\\\"></app-create-entity>\\n\\n                    <div class=\\\"panel panel-primary\\\" *ngIf=\\\"entityDataSource\\\">\\n                        <table cdk-table [dataSource]=\\\"entityDataSource\\\" class=\\\"table table-striped\\\">\\n\\n                            <!-- ID Column -->\\n                            <ng-container cdkColumnDef=\\\"id\\\">\\n                                <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\n                                <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"actions\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Actions </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n\\n                                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEntity(element.tid)\\\">\\n                                        <mat-icon>delete</mat-icon>\\n                                    </button>\\n                                    <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\"\\n                                        (click)=\\\"redirectToEntityDetails(element.tid)\\\">\\n                                        <mat-icon>launch</mat-icon>\\n                                    </button>\\n                                </td>\\n                            </ng-container>\\n\\n                            <tr cdk-header-row *cdkHeaderRowDef=\\\"entityDisplayedColumns\\\"></tr>\\n                            <tr cdk-row *cdkRowDef=\\\"let row; columns: entityDisplayedColumns;\\\"></tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Enums\\\">\\n                <div class=\\\"panel-body\\\">\\n\\n                    <app-create-enum [domainTid]=\\\"domain.tid\\\" (notify)=\\\"onNotifyEnum($event)\\\"></app-create-enum>\\n\\n                    <div class=\\\"panel panel-primary\\\" *ngIf=\\\"enumDataSource\\\">\\n                        <table cdk-table [dataSource]=\\\"enumDataSource\\\" class=\\\"table table-striped\\\">\\n\\n                            <!-- ID Column -->\\n                            <ng-container cdkColumnDef=\\\"id\\\">\\n                                <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\n                                <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"actions\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Actions </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEnum(element.tid)\\\">\\n                                        <mat-icon>delete</mat-icon>\\n                                    </button>\\n                                    <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\"\\n                                        (click)=\\\"redirectToEnumDetails(element.tid)\\\">\\n                                        <mat-icon>launch</mat-icon>\\n                                    </button>\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"delete\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Delete </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEnum(element.tid)\\\">\\n                                        Delete\\n                                    </button>\\n                                </td>\\n                            </ng-container>\\n\\n                            <tr cdk-header-row *cdkHeaderRowDef=\\\"enumDisplayedColumns\\\"></tr>\\n                            <tr cdk-row *cdkRowDef=\\\"let row; columns: enumDisplayedColumns;\\\"></tr>\\n                        </table>\\n                    </div>\\n\\n                </div>\\n\\n            </mat-tab>\\n\\n        </mat-tab-group>\\n\\n    </div>\\n</div>\"","export default \"<h2 mat-dialog-title> change  domain-id </h2>\\r\\n\\r\\n\\r\\n<mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n\\r\\n    <input required matInput placeholder=\\\"domain-id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  \\r\\n<div mat-dialog-actions>\\r\\n  <button  class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n  <button class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\"  (click)=\\\"save()\\\">Save</button>\\r\\n</div>\"","export default \"<h2>List of domain models</h2>\\n\\n<form #domainForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveDomain()\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Create Domain</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"id.invalid && id.touched\\\">\\n        <label class=\\\"control-label\\\" for=\\\"id\\\">Id</label>\\n        <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"newDomain.id\\\" type=\\\"text\\\" class=\\\"form-control\\\" #id=\\\"ngModel\\\">\\n        <span class=\\\"help-block\\\" *ngIf=\\\"id.invalid && id.touched\\\">Id is required</span>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"domainForm.invalid\\\">Add Domain</button>\\n    </div>\\n\\n  </div>\\n\\n</form>\\n\\n<div class=\\\"panel panel-primary half\\\">\\n  <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\n\\n    <!-- ID Column -->\\n    <ng-container cdkColumnDef=\\\"id\\\">\\n      <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\n      <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n\\n        <button (click)=\\\"redirectToDelete(element.tid)\\\" mat-raised-button color=\\\"warn\\\">\\n          <mat-icon>delete</mat-icon>\\n        </button>\\n        <button (click)=\\\"redirectToDetails(element.tid)\\\" mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\">\\n          <mat-icon>launch</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\"","export default \"<form #entityForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveEntity()\\\">\\r\\n<div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n        <h3 class=\\\"panel-title\\\">Create Entity</h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"id.invalid && id.touched\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"id\\\">Id</label>\\r\\n            <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"domainEntityModel.id\\\" type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\" #id=\\\"ngModel\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"id.invalid && id.touched\\\">Id is required</span>\\r\\n        </div>        \\r\\n    </div>\\r\\n    <div class=\\\"panel-footer\\\">\\r\\n        <button type=\\\"submit\\\" mat-raised-button color = \\\"primary\\\" [disabled]=\\\"entityForm.invalid\\\">Save</button>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n</form>\"","export default \"<div *ngIf=\\\"form\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <div class=\\\"panel-title\\\" style=\\\"height: 30px;\\\" *ngIf=\\\"entity\\\">\\r\\n                Create Entity Field of Entity {{entity.id}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Id\\\" formControlName=\\\"id\\\" #id>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-checkbox style=\\\"margin-left: 10px\\\" formControlName=\\\"identifier\\\">Identifier</mat-checkbox>\\r\\n                <mat-checkbox style=\\\"margin-left: 10px\\\" formControlName=\\\"optional\\\" *ngIf=\\\"isOptionalFieldVisible()\\\">Optional</mat-checkbox>\\r\\n                <mat-checkbox style=\\\"margin-left: 10px\\\" *ngIf=\\\"isMultipleFieldVisible()\\\" formControlName=\\\"multiple\\\">Multiple</mat-checkbox>\\r\\n\\r\\n                <br>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Select Type\\\" formControlName=\\\"type\\\">\\r\\n                        <mat-option *ngFor=\\\"let fieldType of fieldTypes\\\" [value]=\\\"fieldType[0]\\\">\\r\\n                            {{fieldType[0]}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n                <br>\\r\\n\\r\\n                <mat-form-field *ngIf=\\\"isCardinalityFieldVisible()\\\">\\r\\n                    <mat-select placeholder=\\\"Select Cardinality\\\" formControlName=\\\"cardinality\\\">\\r\\n                        <mat-option *ngFor=\\\"let fieldCardinality of fieldCardinalities\\\" [value]=\\\"fieldCardinality[0]\\\">\\r\\n                            {{fieldCardinality[0]}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <br>\\r\\n\\r\\n                <mat-form-field *ngIf=\\\"isReferenceFieldVisible()\\\">\\r\\n                    <mat-select placeholder=\\\"Select Reference\\\" formControlName=\\\"referenceId\\\">\\r\\n                        <mat-option *ngFor=\\\"let fieldReference of getReferences()\\\" [value]=\\\"fieldReference.id\\\">\\r\\n                            {{fieldReference.id}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n            </mat-dialog-content>\\r\\n\\r\\n\\r\\n            <mat-dialog-actions>\\r\\n                <button class=\\\"mat-raised-button\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\"\\r\\n                    (click)=\\\"saveEntity()\\\">Save</button>\\r\\n            </mat-dialog-actions>\\r\\n            <br>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"entity\\\">\\r\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"domain\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <div class=\\\"panel-title\\\">Domain {{domain.id}} - Entity {{entity.id}}\\r\\n        <button style=\\\"margin-left: 3px\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\" mat-mini-fab\\r\\n          (click)=\\\"openDialogChangeEntityId()\\\">\\r\\n          <mat-icon>create</mat-icon>\\r\\n        </button>\\r\\n        <button style=\\\"float: right;\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\" mat-mini-fab\\r\\n          (click)=\\\"back()\\\">\\r\\n          <mat-icon>arrow_back</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"addField();\\\"\\r\\n      style=\\\"margin-left: 12px;  margin-top: 10px;\\\">Add Field</button>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\" *ngIf=\\\"dataSource\\\">\\r\\n        <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"id\\\">\\r\\n            <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\r\\n            <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"identifier\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> identifier </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.identifier}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"type\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> type </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.type}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"cardinality\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> cardinality </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.cardinality}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"optional\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> optional </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.optional}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"referenceId\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> referenceId </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.referenceId}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteField(element.tid)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n              <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\" (click)=\\\"redirectToField(element.tid)\\\">\\r\\n                <mat-icon>launch</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"field\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">{{field.id}}</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Field-ID</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.id}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Type</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.type}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Cardinality</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.cardinality}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Optional</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.optional}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Identifier</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.identifier}}</div>\\r\\n            </div>            \\r\\n            <div class=\\\"row\\\"  *ngIf=\\\"model\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Reference-ID</div>\\r\\n                <div class=\\\"col-xs-8\\\"><a routerLink=\\\"/displayEntity/{{model.id}}/{{field.referenceId}}\\\">{{field.referenceId}}</a></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<h2 mat-dialog-title> change  entity-id </h2>\\r\\n\\r\\n\\r\\n<mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n\\r\\n    <input required matInput placeholder=\\\"entity-id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  \\r\\n<div mat-dialog-actions>\\r\\n  <button  class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n  <button class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\">Save</button>\\r\\n</div>\"","export default \"\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"domain\\\" class=\\\"domain-label\\\">\\r\\n            Select Domain\\r\\n        </label>\\r\\n        <select id=\\\"domain\\\" name=\\\"domain\\\" [(ngModel)]=\\\"domainTid\\\" required class=\\\"form-control\\\" style = \\\"font-weight:bold; height:40px; font-size: 16px\\\">\\r\\n            <option *ngFor=\\\"let domain of domainList\\\" [value]=\\\"domain.tid\\\">{{domain.id}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n\\r\\n<div *ngIf=\\\"domainTid\\\">\\r\\n\\r\\n    <app-display-domain [domainTid] = \\\"domainTid\\\"  (notify)=\\\"onNotify($event)\\\"></app-display-domain>\\r\\n\\r\\n</div>\"","export default \"\\n<form #enumForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveEnum()\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Create Enum</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"id.invalid && id.touched\\\">\\n                <label class=\\\"control-label\\\" for=\\\"id\\\">Id</label>\\n                <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"domainEnumModel.id\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                    #id=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"id.invalid && id.touched\\\">Id is required</span>\\n            </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"enumForm.invalid\\\">Save</button>\\n        </div>\\n\\n    </div>\\n\\n</form>\\n\"","export default \"<div *ngIf=\\\"enum\\\">\\r\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"domain\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <div class=\\\"panel-title\\\">Domain {{domain.id}} - Enum {{enum.id}}\\r\\n        <button style=\\\"margin-left: 3px\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\" mat-mini-fab\\r\\n          (click)=\\\"openDialog()\\\">\\r\\n          <mat-icon>create</mat-icon>\\r\\n        </button>\\r\\n        <button style=\\\"float: right\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\"\\r\\n        mat-mini-fab (click)=\\\"back()\\\">\\r\\n        <mat-icon>arrow_back</mat-icon>\\r\\n    </button>        \\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <form #enumValueForm=\\\"ngForm\\\" (ngSubmit)=\\\"addValue()\\\">\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label\\\" for=\\\"id\\\">Value</label>\\r\\n              <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"newEnumValue\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                #id=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"panel-footer\\\">\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"enumValueForm.invalid\\\" mat-raised-button color=\\\"primary\\\"> Add\\r\\n              Value</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\" *ngIf=\\\"dataSource\\\">\\r\\n        <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"id\\\">\\r\\n            <th cdk-header-cell *cdkHeaderCellDef> Value </th>\\r\\n            <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteValue(element)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n\\r\\n\\r\\n        <div class=\\\"panel-footer\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveEnum()\\\"> Save</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Change  enum-id </h2>\\r\\n\\r\\n\\r\\n<mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n\\r\\n    <input required matInput placeholder=\\\"enum-id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  \\r\\n<div mat-dialog-actions>\\r\\n  <button  class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n  <button class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\"  (click)=\\\"save()\\\">Save</button>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'DomainStruct';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ListEntitiesComponent } from './entities/list-entities.component';\r\nimport { CreateEntityComponent } from './entities/create-entity.component';\r\nimport { CreateFieldComponent } from './entities/create-field.component';\r\nimport { EntityService } from './entities/entity.service';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DisplayEntityComponent, EditEntityIdDialog } from './entities/display-entity.component';\r\nimport { DisplayFieldComponent } from './entities/display-field.component';\r\nimport { ListDomainsComponent } from './domains/list-domains.component';\r\nimport { DisplayDomainComponent, EditDomainIdDialog } from './domains/display-domain.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { CreateEnumComponent } from './enum/create-enum.component';\r\nimport { EnumService } from './enum/enum.service';\r\nimport { DisplayEnumComponent, EditEnumIdDialog } from './enum/display-enum.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'listDomains', component: ListDomainsComponent },\r\n  { path: 'listEntities', component: ListEntitiesComponent },\r\n  { path: 'listEntities/:domainTid', component: ListEntitiesComponent },\r\n  { path: 'listEnums/:domainTid', component: ListEntitiesComponent },\r\n  { path: 'displayEntity/:domainTid/:entityTid', component: DisplayEntityComponent },\r\n  { path: 'displayEnum/:domainTid/:enumTid', component: DisplayEnumComponent },\r\n  { path: 'createEntity/:domainTid', component: CreateEntityComponent },\r\n  { path: 'createField/:domainTid/:entityTid', component: CreateFieldComponent },\r\n  { path: 'displayField/:domainTid/:entityTid/:fieldTid', component: CreateFieldComponent },\r\n  { path: '', redirectTo: '/listDomains', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListEntitiesComponent,\r\n    CreateEntityComponent,\r\n    CreateFieldComponent,\r\n    DisplayEntityComponent,\r\n    DisplayEnumComponent,\r\n    DisplayFieldComponent,\r\n    ListDomainsComponent,\r\n    DisplayDomainComponent,\r\n    EditEntityIdDialog,\r\n    EditEnumIdDialog,\r\n    EditDomainIdDialog,\r\n    CreateEnumComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule\r\n  ],\r\n  entryComponents: [\r\n    EditEntityIdDialog,\r\n    EditEnumIdDialog,\r\n    EditDomainIdDialog\r\n  ],\r\n  providers: [\r\n    EntityService,\r\n    EnumService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RvbWFpbnMvZGlzcGxheS1kb21haW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Inject, Output } from '@angular/core';\nimport { DomainModel } from '../model/domain.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EntityService } from '../entities/entity.service';\nimport { DomainService } from './domain.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DialogData } from '../entities/display-entity.component';\nimport { EventEmitter } from '@angular/core';\nimport { EnumService } from '../enum/enum.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-display-domain',\n  templateUrl: './display-domain.component.html',\n  styleUrls: ['./display-domain.component.css']\n})\nexport class DisplayDomainComponent implements OnInit {\n\n  domain: DomainModel;\n  @Input() domainTid: number;\n  @Output() notify = new EventEmitter();\n\n\n  entityDisplayedColumns: string[] = ['id', 'actions'];\n  entityDataSource;\n  enumDisplayedColumns: string[] = ['id', 'actions'];\n  enumDataSource;\n\n  newDomainId: string;\n\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService, private enumService: EnumService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n\n      if (this.domainTid == null) {\n        this.domainTid = +params.get('domainTid');\n      }\n\n      this.domainService.getDomain(this.domainTid).subscribe(\n\n        (response) => {\n          this.domain = response;\n          this.entityDataSource = this.domain.entities;\n\n          console.log(JSON.stringify(this.domain.enums));\n          this.enumDataSource = this.domain.enums;\n        }\n      )\n    });\n\n  }\n\n  ngOnChanges() {\n    this.ngOnInit();\n  }\n\n  onNotifyEntity(entityTid: number) {\n    this.redirectToEntityDetails(entityTid);\n  }\n\n  onNotifyEnum(enumTid: number) {\n    this.redirectToEnumDetails(enumTid);\n  }\n\n\n  addEntity() {\n    this.router.navigate([\"createEntity\", this.domainTid]);\n  }\n\n  deleteEntity(entityTid: number) {\n    this.entityService.deleteEntity(this.domainTid, entityTid).subscribe(data => {\n      console.log(\"data after Post: \" + data);\n      this.domain = null;\n      this.ngOnInit();\n    });\n  }\n\n  deleteEnum(enumTid: number) {\n    this.enumService.deleteEnum(this.domainTid, enumTid).subscribe(data => {\n      console.log(\"data after Post: \" + data);\n      this.domain = null;\n      this.ngOnInit();\n    });\n  }\n\n  redirectToEntityDetails(entityTid: number) {\n    this.router.navigate([\"displayEntity\", this.domainTid, entityTid]);\n  }\n\n  redirectToEnumDetails(enumTid: number) {\n    console.log(\"redirectToEnumDetails enum: \" + enumTid);\n    this.router.navigate([\"displayEnum\", this.domainTid, enumTid]);\n  }\n\n  back() {\n    this.router.navigate([\"listDomains\"]);\n  }\n\n\n  openDialogChangeDomainId(): void {\n    this.newDomainId = this.domain.id;\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = { id: this.newDomainId };\n\n    /*  dialogRef = this.dialog.open(EditDomainIdDialog, {\n       width: '250px',\n       data: { id: this.newDomainId }\n     });*/\n\n    const dialogRef = this.dialog.open(EditDomainIdDialog, dialogConfig);\n\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == null || result == undefined) {\n        return;\n      }\n      this.domain.id = result.id;\n      this.domainService.updateDomain(this.domain).subscribe(data => {\n        console.log(\"data after change Entity: \" + data);\n        this.ngOnInit();\n        this.notify.emit(this.domain.tid);\n      });\n\n    });\n  }\n\n}\n\n@Component({\n  selector: 'edit-domain-id-dialog',\n  templateUrl: 'edit-domain-id-dialog.html',\n})\nexport class EditDomainIdDialog {\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<EditDomainIdDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n\n      this.form = this.fb.group({\n\n      id: [data.id, Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  save(): void {\n    console.log(\"close\");\n    this.dialogRef.close(this.form.value);\n  }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DomainModel } from '../model/domain.model';\nimport { DomainEntityModel } from '../model/entity.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomainService {\n\n  constructor(private http: HttpClient) { }\n\n  public getDomains(): Observable<DomainModel[]> {\n\n    let obs: Observable<DomainModel[]> = this.http.get<DomainModel[]>('https://crud-app-builder.herokuapp.com/tmodels/');\n\n\n    return obs;\n  }\n\n  public getDomain(domainTid: number): Observable<DomainModel> {\n\n    let obs : Observable<DomainModel> = this.http.get<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid);\n  \n  \n    return obs;\n}\n\n  public addDomain(domainModel: DomainModel): Observable<DomainModel> {\n    let obs: Observable<DomainModel> = this.http.post<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/', domainModel);\n    return obs;\n\n  }\n\n  public updateDomain(domainModel: DomainModel) : Observable<DomainModel> {\n\n    console.log(JSON.stringify(domainModel));\n    let obs : Observable<DomainModel> = this.http.put<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainModel.tid,  domainModel);\n    return obs;\n    \n}\n\n\n  public deleteDomain(domainTid: number): Observable<DomainModel> {\n\n    console.log(\"delete Domain \" + domainTid);\n    let obs: Observable<DomainModel> = this.http.delete<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/' + domainTid);\n    return obs;\n\n  }\n\n  public getEntityById(domainModel: DomainModel, entityId: string) : DomainEntityModel\n  {\n      return domainModel.entities.find(e => e.id == entityId);\n  }\n\n  public getEntityByTid(domainModel: DomainModel, entityTid: number) : DomainEntityModel\n  {\n      return domainModel.entities.find(e => e.tid == entityTid);\n  }\n\n\n}\n","export default \"table {\\r\\n    width: 95%;\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n  \\r\\n  th {\\r\\n    text-align: left;\\r\\n  }\\r\\n  \\r\\n  .half {\\r\\n    width: 50%;   \\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9tYWlucy9saXN0LWRvbWFpbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxVQUFVO0VBQ1oiLCJmaWxlIjoic3JjL2FwcC9kb21haW5zL2xpc3QtZG9tYWlucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDk1JTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIH1cclxuICBcclxuICB0aCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIH1cclxuXHJcbiAgLmhhbGYge1xyXG4gICAgd2lkdGg6IDUwJTsgICBcclxuICB9Il19 */\"","import { DataSource } from '@angular/cdk/collections';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DomainModel } from '../model/domain.model';\nimport { DomainService } from './domain.service';\n\n\n@Component({\n  selector: 'app-list-domains',\n  templateUrl: './list-domains.component.html',\n  styleUrls: ['./list-domains.component.css']\n})\nexport class ListDomainsComponent implements OnInit {\n\n  newDomain: DomainModel;\n\n  domains: DomainModel[];\n\n  displayedColumns: string[] = ['id', 'actions'];\n  dataSource = new DomainListDataSource(this.router, this.domainService);\n\n\n\n  constructor(private router: Router, private domainService: DomainService) { }\n\n  ngOnInit() {\n    this.newDomain = {\n      tid: null,\n      id: null,\n      entities: null,\n      enums: null\n    };\n    this.dataSource = new DomainListDataSource(this.router, this.domainService);\n\n  }\n\n  saveDomain(): void {\n    console.log(this.newDomain);\n\n    this.domainService.addDomain(this.newDomain).subscribe(data => {\n      this.router.navigate([\"listEntities\", data.tid]);\n    });\n\n  }\n\n  public redirectToDetails = (tid: number) => {\n    this.router.navigate([\"listEntities\", tid]);\n  }\n  \n  public redirectToDelete = (tid: number) => {\n    this.domainService.deleteDomain(tid).subscribe(data => {\n      console.log(\"data after Delete: \" + data);\n      this.ngOnInit();\n    });\n  }\n\n  \n\n}\n\n\nexport class DomainListDataSource extends DataSource<DomainModel> {\n\n  data: Observable<DomainModel[]> = (this.domainService.getDomains());\n\n  constructor(private router: Router, private domainService: DomainService) {\n    super();\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<DomainModel[]> {\n    return this.data;\n  }\n\n\n  disconnect() { }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWF0ZS1lbnRpdHkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { EntityService } from './entity.service';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-entity',\r\n  templateUrl: './create-entity.component.html',\r\n  styleUrls: ['./create-entity.component.css']\r\n})\r\nexport class CreateEntityComponent implements OnInit {\r\n\r\n  @Input() domainTid: number = null;\r\n  @Output() notify = new EventEmitter<number>();\r\n\r\n  domainEntityModel: DomainEntityModel = {\r\n    tid: null,\r\n    id: null,\r\n    fields: null\r\n  };\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private _entityService: EntityService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.domainTid == null) {\r\n      this.route.paramMap.subscribe(params => {\r\n        this.domainTid = params.get('domainTid') == null ? null : +params.get('domainTid');\r\n      });\r\n    }\r\n  }\r\n\r\n  saveEntity(): void {\r\n    console.log(this.domainEntityModel);\r\n\r\n    this._entityService.addEntity(this.domainTid, this.domainEntityModel).subscribe(data => {\r\n\r\n      this.domainEntityModel = data;\r\n      this.router.navigate([\"listEntities\", this.domainTid]);\r\n      this.notify.emit(this.domainEntityModel.tid);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWF0ZS1maWVsZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DomainService } from '../domains/domain.service';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { FieldCardinality } from '../model/field.cardinality.model';\r\nimport { DomainEntityFieldModel } from '../model/field.model';\r\nimport { FieldType } from '../model/field.type.model';\r\nimport { RefernceModel as ReferenceModel } from '../model/reference.model';\r\nimport { EntityService } from './entity.service';\r\n\r\nexport interface DialogData {\r\n  domainTid: number;\r\n  enityTid: number;  \r\n  fieldTid: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-field',\r\n  templateUrl: './create-field.component.html',\r\n  styleUrls: ['./create-field.component.css']\r\n})\r\nexport class CreateFieldComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  fieldTypes: [string, FieldType][] = Object.entries(FieldType);\r\n  fieldCardinalities: [string, FieldCardinality][] = Object.entries(FieldCardinality);\r\n\r\n  domain: DomainModel;\r\n\r\n  entityTid: number;\r\n\r\n  fieldTid: number = null;\r\n  fieldId: string = null;\r\n  fieldOptional: boolean = null;\r\n  fieldIdentifier: boolean = null;\r\n  fieldType: FieldType = null;\r\n  fieldMultiple: boolean = null;\r\n  fieldCardinality: FieldCardinality = null;\r\n  fieldReferenceId: string = null;\r\n\r\n  \r\n  entity: DomainEntityModel;\r\n\r\n  fieldNew: boolean = null;\r\n\r\n  constructor( private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService, public dialogRef: MatDialogRef<CreateFieldComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      var domainTid: number;\r\n      if(!this.data.enityTid) {\r\n       this.entityTid = params.get('entityTid') == null ? null : +params.get('entityTid');\r\n       this.fieldTid = params.get('fieldTid') == null ? null : +params.get('fieldTid');\r\n       domainTid = +params.get('domainTid');\r\n      } else {\r\n        this.entityTid = this.data.enityTid;\r\n        this.fieldTid = this.data.fieldTid;\r\n        domainTid =  this.data.domainTid;      \r\n      }\r\n\r\n      this.fieldNew = this.fieldTid == null;\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.domain = response;\r\n\r\n          this.entity = this.domainService.getEntityByTid(this.domain, this.entityTid);\r\n\r\n          if (!this.fieldNew) {\r\n            const field: DomainEntityFieldModel = this.entityService.getField(this.entity, this.fieldTid);\r\n\r\n            this.fieldId = field.id;\r\n            this.fieldOptional = field.optional;\r\n            this.fieldIdentifier = field.identifier;\r\n            this.fieldType = field.type;\r\n            if (field.type == FieldType.ENTITY || field.type == FieldType.ENUM) {\r\n              this.fieldReferenceId = field.referenceId;\r\n            }\r\n            if (field.type == FieldType.ENTITY) {\r\n              this.fieldCardinality = field.cardinality;\r\n            } else {\r\n              this.fieldMultiple = field.cardinality == FieldCardinality.ONE_TO_MANY;\r\n            }\r\n          }\r\n\r\n          this.form = this.fb.group({\r\n\r\n            id: [this.fieldId],\r\n            optional: [this.fieldOptional],\r\n            identifier: [this.fieldIdentifier],\r\n            type: [this.fieldType],\r\n            multiple: [this.fieldMultiple],\r\n            cardinality: [this.fieldCardinality],\r\n            referenceId: [this.fieldReferenceId]\r\n          });\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  getReferences(): ReferenceModel[] {\r\n    if (this.isOfEntityType()) {\r\n      return this.domain.entities;\r\n    } else if (this.isOfEnumType()) {\r\n      return this.domain.enums;\r\n    }\r\n  }\r\n\r\n  isOptionalFieldVisible() {\r\n    return !this.form.get(\"identifier\").value;\r\n  }\r\n\r\n  isCardinalityFieldVisible() {\r\n    return this.isOfEntityType();\r\n  }\r\n\r\n  isReferenceFieldVisible() {\r\n    return this.isOfEntityType() || this.isOfEnumType();\r\n  }\r\n\r\n  isMultipleFieldVisible() {\r\n    return !this.isOfEntityType();\r\n  }\r\n\r\n  isOfEntityType() {\r\n    return this.form.get(\"type\").value == \"ENTITY\";\r\n  }\r\n\r\n  isOfEnumType() {\r\n    return this.form.get(\"type\").value == \"ENUM\";\r\n  }\r\n\r\n  saveEntity(): void {\r\n    const domainEntityFieldModel: DomainEntityFieldModel = new DomainEntityFieldModel();\r\n\r\n    console.log(\"(this.fieldId-- \"+JSON.stringify(this.form.value));\r\n    console.log(\"(this.fieldId-- \"+JSON.stringify(this.form.value.id));\r\n  \r\n    domainEntityFieldModel.tid = this.fieldTid;\r\n    domainEntityFieldModel.id = this.form.value.id;\r\n    domainEntityFieldModel.identifier = this.form.value.identifier;\r\n    domainEntityFieldModel.optional = this.form.value.optional;\r\n    domainEntityFieldModel.type = this.form.value.type;\r\n    if (this.form.value.type == FieldType.ENTITY) {\r\n      domainEntityFieldModel.cardinality = this.form.value.cardinality;\r\n      domainEntityFieldModel.referenceId = this.form.value.referenceId;\r\n    } else if (this.form.value.type == FieldType.ENUM) {\r\n      domainEntityFieldModel.referenceId = this.form.value.referenceId;\r\n    }\r\n\r\n    if (this.form.value.type != FieldType.ENTITY) {\r\n      domainEntityFieldModel.cardinality = this.form.value.multiple ? FieldCardinality[FieldCardinality.ONE_TO_MANY] : FieldCardinality[FieldCardinality.ONE_TO_ONE];\r\n    }\r\n\r\n    if (this.fieldNew) {\r\n      this.entityService.addField(this.domain.tid, this.entityTid, domainEntityFieldModel).subscribe(data => {\r\n        console.log(\"data after Post: \" + data.tid);\r\n        this.leave();\r\n      });\r\n    } else {\r\n      this.entityService.updateField(this.domain.tid, this.entityTid, domainEntityFieldModel).subscribe(data => {\r\n        console.log(\"data after Put: \" + data.tid);\r\n        this.leave();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  private leave() {\r\n    if (this.data) {\r\n      this.dialogRef.close();\r\n    } else {\r\n      this.router.navigate([\"displayEntity\", this.domain.tid, this.entityTid]);\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.leave();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2Rpc3BsYXktZW50aXR5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, Inject } from '@angular/core';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EntityService } from './entity.service';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DomainService } from '../domains/domain.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CreateFieldComponent } from './create-field.component';\r\n\r\n\r\nexport interface DialogData {\r\n  domainTid: number;\r\n  entity: DomainEntityModel;\r\n  id: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-display-entity',\r\n  templateUrl: './display-entity.component.html',\r\n  styleUrls: ['./display-entity.component.css']\r\n})\r\nexport class DisplayEntityComponent implements OnInit {\r\n\r\n  @Input() domain: DomainModel;\r\n  @Input() entity: DomainEntityModel;\r\n  @Output() notify = new EventEmitter();\r\n\r\n  newEntityId: string;\r\n\r\n  // , <!-- \r\n\r\n  displayedColumns: string[] = ['id', 'identifier', 'type', 'cardinality', 'optional', 'referenceId', 'actions'];\r\n  dataSource;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.entity != null) {\r\n      return;\r\n    }\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const domainTid: number = +params.get('domainTid');\r\n      const entityTid: number = +params.get('entityTid');\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.domain = response;\r\n        }\r\n      )\r\n\r\n      this.entityService.getEntity(domainTid, entityTid).subscribe(\r\n\r\n        (response) => {\r\n          this.entity = response;\r\n          this.dataSource = this.entity.fields;\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  addField() {\r\n    console.log(\"add Field \" + this.domain.tid, this.entity.tid);\r\n    //this.router.navigate([\"createField\", this.domain.tid, this.entity.tid]);\r\n    this.redirectToField(null);\r\n  }\r\n\r\n  deleteField(fieldTid: number) {\r\n    this.entityService.deleteField(this.domain.tid, this.entity.tid, fieldTid).subscribe(data => {\r\n      console.log(\"data after Delete: \" + data);\r\n      this.entity = null;\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n  redirectToField(fieldTid: number) {\r\n\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.autoFocus = true;\r\n\r\n    dialogConfig.width = '700px';\r\n    dialogConfig.data = {\r\n      domainTid: this.domain.tid,\r\n      enityTid: this.entity.tid,\r\n      fieldTid: fieldTid\r\n    };\r\n\r\n    const dialogRef = this.dialog.open(CreateFieldComponent, dialogConfig);\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.entity = null;\r\n        this.ngOnInit();\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onNotify() {\r\n    this.entityService.getEntity(this.domain.tid, this.entity.tid).subscribe(data => {\r\n      this.entity = data;\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([\"listEntities\", this.domain.tid]);\r\n  }\r\n\r\n  openDialogChangeEntityId(): void {\r\n    this.newEntityId = this.entity.id;\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = {\r\n      id: this.newEntityId,\r\n      domainTid: this.domain.tid,\r\n      entity: this.entity\r\n    };\r\n\r\n    /*  dialogRef = this.dialog.open(EditDomainIdDialog, {\r\n       width: '250px',\r\n       data: { id: this.newDomainId }\r\n     });*/\r\n\r\n    const dialogRef = this.dialog.open(EditEntityIdDialog, dialogConfig);\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result == null || result == undefined) {\r\n        return;\r\n      }\r\n\r\n\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-entity-id-dialog',\r\n  templateUrl: 'edit-entity-id-dialog.html',\r\n})\r\nexport class EditEntityIdDialog {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private entityService: EntityService,\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<EditEntityIdDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n\r\n    this.form = this.fb.group({\r\n\r\n      id: [data.entity.id, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  save(): void {\r\n    this.data.entity.id = this.form.value.id;\r\n\r\n    this.entityService.updateEntity(this.data.domainTid, this.data.entity).subscribe(data => {\r\n      console.log(\"data after change Entity: \" + JSON.stringify(data));\r\n      this.ngOnInit();\r\n      this.dialogRef.close(this.form.value);\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2Rpc3BsYXktZmllbGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { DomainEntityFieldModel } from '../model/field.model';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { EntityService } from './entity.service';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DomainService } from '../domains/domain.service';\r\n\r\n@Component({\r\n  selector: 'app-display-field',\r\n  templateUrl: './display-field.component.html',\r\n  styleUrls: ['./display-field.component.css']\r\n})\r\n\r\nexport class DisplayFieldComponent implements OnInit {\r\n\r\n  @Input() model: DomainModel;\r\n  @Input() entity: DomainEntityModel;\r\n  @Input() field: DomainEntityFieldModel;\r\n  @Output()  notify = new EventEmitter();\r\n  \r\n  constructor(private route: ActivatedRoute, private domainService: DomainService, private entityService: EntityService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.entity!=null) {\r\n      return;\r\n    }\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const domainTid: number = params.get('domainTid') == null ? null:  +params.get('domainTid');\r\n      const entityTid: number = params.get('entityTid') == null ? null : +params.get('entityTid');\r\n      const fieldTid: number = params.get('fieldTid') == null ? null : +params.get('fieldTid');\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.model = response;\r\n        }\r\n      )\r\n\r\n      this.entityService.getEntity(domainTid, entityTid).subscribe(\r\n\r\n        (response) => {\r\n          this.entity = response;\r\n          this.field = this.entityService.getField(response, fieldTid);\r\n        }\r\n      )\r\n      this.entity\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { DomainEntityFieldModel } from '../model/field.model';\r\n\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n\r\n    constructor(private http: HttpClient) {\r\n       }\r\n\r\n    public getEntity(domainTid: number, entityTid: number): Observable<DomainEntityModel> {\r\n\r\n        let obs : Observable<DomainEntityModel> = this.http.get<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid);\r\n\r\n        return obs;\r\n    }\r\n\r\n    public addEntity(domainTid: number, domainEntityModel: DomainEntityModel) : Observable<DomainEntityModel> {\r\n        let obs : Observable<DomainEntityModel> = this.http.post<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/entities', domainEntityModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public updateEntity(domainTid: number, domainEntityModel: DomainEntityModel) : Observable<DomainEntityModel> {\r\n\r\n        console.log(JSON.stringify(domainEntityModel));\r\n        let obs : Observable<DomainEntityModel> = this.http.put<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/entities/' +domainEntityModel.tid,  domainEntityModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public deleteEntity(domainTid: number, entityTid: number) : Observable<string> {\r\n\r\n        console.log(\"delete Entity \"+entityTid);\r\n        let obs : Observable<string> = this.http.delete<string>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public addField(domainTid: number, entityTid: number, domainEntityFieldModel: DomainEntityFieldModel) : Observable<DomainEntityFieldModel> {\r\n        console.log(JSON.stringify(domainEntityFieldModel));\r\n\r\n        let obs : Observable<DomainEntityFieldModel> = this.http.post<DomainEntityFieldModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid, domainEntityFieldModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public updateField(domainTid: number, entityTid: number, domainEntityFieldModel: DomainEntityFieldModel) : Observable<DomainEntityFieldModel> {\r\n        console.log(JSON.stringify(domainEntityFieldModel));\r\n\r\n        let obs : Observable<DomainEntityFieldModel> = this.http.put<DomainEntityFieldModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid+'/fields/'+domainEntityFieldModel.tid, domainEntityFieldModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n\r\n\r\n    public deleteField(domainTid: number, entityTid: number, fieldTid: number) : Observable<DomainEntityModel> {\r\n\r\n        console.log(\"delete Field \"+entityTid+\"/\"+fieldTid);\r\n        let obs : Observable<DomainEntityModel> = this.http.delete<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid+\"/fields/\"+fieldTid);\r\n        return obs;\r\n    }\r\n\r\n    public getField(entity: DomainEntityModel, fieldTid: number) : DomainEntityFieldModel\r\n    {\r\n        return entity.fields.find(p => p.tid == fieldTid);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2xpc3QtZW50aXRpZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { EntityService } from './entity.service';\r\nimport { ObservableInput, Observable } from 'rxjs';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DomainService } from '../domains/domain.service';\r\n\r\n@Component({\r\n  templateUrl: './list-entities.component.html',\r\n  styleUrls: ['./list-entities.component.css']\r\n})\r\nexport class ListEntitiesComponent implements OnInit {\r\n\r\n  domainList: DomainModel[];\r\n\r\n  domainTid: number;\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadDomainList();\r\n    this.route.paramMap.subscribe(params => {\r\n      this.domainTid = params.get('domainTid') == null ? null : +params.get('domainTid');\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  loadDomainList(): void {\r\n    this.domainService.getDomains().subscribe(\r\n\r\n      (response) => {\r\n        this.domainList = response;\r\n        ;\r\n      }\r\n    )\r\n  }\r\n\r\n  addEntity(modelTid: string) {\r\n    console.log(\"add Entity \" + modelTid);\r\n    this.router.navigate([\"createEntity\", modelTid]);\r\n  }\r\n\r\n  onNotify(domainTid: number) {\r\n    this.domainTid = domainTid;\r\n    this.loadDomainList();\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudW0vY3JlYXRlLWVudW0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DomainEnumModel } from '../model/enum.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EnumService } from './enum.service';\n\n@Component({\n  selector: 'app-create-enum',\n  templateUrl: './create-enum.component.html',\n  styleUrls: ['./create-enum.component.css']\n})\nexport class CreateEnumComponent implements OnInit {\n\n  @Input() domainTid: number = null;\n  @Output()  notify = new EventEmitter<number>();\n\n  domainEnumModel: DomainEnumModel = {\n    tid: null,\n    id: null,\n    enumInstances: null\n  };\n\nconstructor(private route: ActivatedRoute, private router: Router,  private enumService: EnumService) { }\n\n  ngOnInit() {\n\n    if (this.domainTid == null) {\n    this.route.paramMap.subscribe(params => {\n      this.domainTid = params.get('domainTid') == null ? null : +params.get('domainTid');\n    });\n  }\n  }\n\n  saveEnum(): void {\n\n    this.enumService.addEnum(this.domainTid, this.domainEnumModel).subscribe(data => {\n\n      this.domainEnumModel = data;\n      this.router.navigate([\"listEnums\", this.domainTid]);\n      this.notify.emit(this.domainEnumModel.tid);\n    });\n\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudW0vZGlzcGxheS1lbnVtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, Inject } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DomainService } from '../domains/domain.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { DomainEnumModel } from '../model/enum.model';\r\nimport { EnumService } from './enum.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { EditEntityIdDialog } from '../entities/display-entity.component';\r\n\r\n\r\nexport interface DialogData {\r\n  id: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-display-enum',\r\n  templateUrl: './display-enum.component.html',\r\n  styleUrls: ['./display-enum.component.css']\r\n})\r\nexport class DisplayEnumComponent implements OnInit {\r\n\r\n  @Input() domain: DomainModel;\r\n  @Input() enum: DomainEnumModel;\r\n  @Output() notify = new EventEmitter();\r\n\r\n  newEnumValue: string = null;\r\n  newEnumId: string = null;\r\n\r\n  displayedColumns: string[] = ['id', 'actions'];\r\n  dataSource;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private enumService: EnumService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.enum != null) {\r\n      return;\r\n    }\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const domainTid: number = +params.get('domainTid');\r\n      const enumTid: number = +params.get('enumTid');\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.domain = response;\r\n        }\r\n      )\r\n\r\n      this.enumService.getEnum(domainTid, enumTid).subscribe(\r\n\r\n        (response) => {\r\n          this.enum = response;\r\n          this.dataSource = new MatTableDataSource<String>();\r\n          this.dataSource.data = this.enum.enumInstances;\r\n          console.log(JSON.stringify(this.domain));\r\n\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  addValue() {\r\n\r\n    console.log(this.newEnumValue);\r\n\r\n    const index = this.enum.enumInstances.indexOf(this.newEnumValue);\r\n    if (index < 0) {\r\n      this.enum.enumInstances.push(this.newEnumValue);\r\n      console.log(JSON.stringify(this.enum.enumInstances));\r\n      this.dataSource.data = this.enum.enumInstances;\r\n    }\r\n    this.newEnumValue = \"\";\r\n\r\n  }\r\n\r\n  deleteValue(value: string) {\r\n    console.log(value);\r\n    const index = this.enum.enumInstances.indexOf(value);\r\n    if (index > -1) {\r\n      this.enum.enumInstances.splice(index, 1);\r\n      this.dataSource.data = this.enum.enumInstances;\r\n    }\r\n  }\r\n\r\n  onNotify() {\r\n    this.enumService.getEnum(this.domain.tid, this.enum.tid).subscribe(data => {\r\n      this.enum = data;\r\n    });\r\n  }\r\n\r\n  saveEnum() {\r\n\r\n    console.log(JSON.stringify(this.enum));\r\n    this.enumService.updateEnum(this.domain.tid, this.enum).subscribe(data => {\r\n\r\n      this.enum = data;\r\n      this.notify.emit(this.enum.tid);\r\n      this.router.navigate([\"listEnums\", this.domain.tid]);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([\"listEnums\", this.domain.tid]);\r\n  }\r\n\r\n\r\n\r\n\r\n  openDialog(): void {\r\n    this.newEnumId = this.enum.id;\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = { id: this.newEnumId };\r\n\r\n    /*  dialogRef = this.dialog.open(EditDomainIdDialog, {\r\n       width: '250px',\r\n       data: { id: this.newDomainId }\r\n     });*/\r\n\r\n    const dialogRef = this.dialog.open(EditEnumIdDialog, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      this.enum.id = result.id;\r\n      this.enumService.updateEnum(this.domain.tid, this.enum).subscribe(data => {\r\n        this.ngOnInit();\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-enum-id-dialog',\r\n  templateUrl: 'edit-enum-id-dialog.html',\r\n})\r\nexport class EditEnumIdDialog {\r\n\r\n  form: FormGroup;\r\n  id: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<EditEnumIdDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n    this.id = data.id;\r\n    this.form = this.fb.group({\r\n\r\n      id: [data.id, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(): void {\r\n    console.log(\"close\");\r\n    this.dialogRef.close(this.form.value);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DomainEnumModel } from '../model/enum.model';\r\n\r\n\r\n@Injectable()\r\nexport class EnumService {\r\n\r\n    constructor(private http: HttpClient) {\r\n       }\r\n\r\n    public getEnum(domainTid: number, enumTid: number): Observable<DomainEnumModel> {\r\n\r\n        let obs : Observable<DomainEnumModel> = this.http.get<DomainEnumModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/enums/'+enumTid);\r\n\r\n        return obs;\r\n    }\r\n\r\n    public addEnum(domainTid: number, domainEnumModel: DomainEnumModel) : Observable<DomainEnumModel> {\r\n        if (!domainEnumModel.enumInstances) {\r\n            domainEnumModel.enumInstances = [];\r\n        }\r\n        let obs : Observable<DomainEnumModel> = this.http.post<DomainEnumModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/enums', domainEnumModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public updateEnum(domainTid: number, domainEnumModel: DomainEnumModel) : Observable<DomainEnumModel> {\r\n\r\n        let obs : Observable<DomainEnumModel> = this.http.put<DomainEnumModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/enums/' +domainEnumModel.tid,  domainEnumModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public deleteEnum(domainTid: number, enumTid: number) : Observable<string> {\r\n\r\n        console.log(\"delete Enum \"+enumTid);\r\n        let obs : Observable<string> = this.http.delete<string>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/enums/'+enumTid);\r\n        return obs;\r\n        \r\n    }\r\n}","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","\r\n\r\nexport enum FieldCardinality {\r\n    ONE_TO_ONE = \"ONE_TO_ONE\",\r\n\tONE_TO_MANY = \"ONE_TO_MANY\",\r\n\tMANY_TO_ONE = \"MANY_TO_ONE\",\r\n\tMANY_TO_MANY = \"MANY_TO_MANY\"\r\n}","import { FieldType } from './field.type.model';\r\nimport { FieldCardinality } from './field.cardinality.model';\r\nimport { RefernceModel as ReferenceModel } from './reference.model';\r\n\r\nexport class DomainEntityFieldModel implements  ReferenceModel  {\r\n    tid: number;\r\n    id: string;\r\n    optional: boolean;\r\n    identifier: boolean;\r\n    type: FieldType;\r\n    cardinality: FieldCardinality;\r\n    referenceId: string;\r\n}","export enum FieldType {\r\n\r\n    TEXT=\"TEXT\",\r\n    NUMBER=\"NUMBER\",\r\n    DATE=\"DATE\",\r\n    BOOLEAN=\"BOOLEAN\",\r\n    ENTITY=\"ENTITY\",\r\n    ENUM=\"ENUM\"\r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}