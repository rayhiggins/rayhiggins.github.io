{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/domains/display-domain.component.html","./src/app/domains/edit-domain-id-dialog.html","./src/app/domains/list-domains.component.html","./src/app/entities/create-entity.component.html","./src/app/entities/create-field.component.html","./src/app/entities/display-entity.component.html","./src/app/entities/display-field.component.html","./src/app/entities/edit-entity-id-dialog.html","./src/app/entities/list-entities.component.html","./src/app/enum/create-enum.component.html","./src/app/enum/display-enum.component.html","./src/app/enum/edit-enum-id-dialog.html","./node_modules/tslib/tslib.es6.js","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/domains/display-domain.component.css","./src/app/domains/display-domain.component.ts","./src/app/domains/domain.service.ts","./src/app/domains/list-domains.component.css","./src/app/domains/list-domains.component.ts","./src/app/entities/create-entity.component.css","./src/app/entities/create-entity.component.ts","./src/app/entities/create-field.component.css","./src/app/entities/create-field.component.ts","./src/app/entities/display-entity.component.css","./src/app/entities/display-entity.component.ts","./src/app/entities/display-field.component.css","./src/app/entities/display-field.component.ts","./src/app/entities/entity.service.ts","./src/app/entities/list-entities.component.css","./src/app/entities/list-entities.component.ts","./src/app/enum/create-enum.component.css","./src/app/enum/create-enum.component.ts","./src/app/enum/display-enum.component.css","./src/app/enum/display-enum.component.ts","./src/app/enum/enum.service.ts","./src/app/material-module.ts","./src/app/model/field.cardinality.model.ts","./src/app/model/field.model.ts","./src/app/model/field.type.model.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"mat-app-background basic-container\\\">\\r\\n  <div style=\\\"background-color: whitesmoke; text-align: center;  box-shadow: 10px 10px 5px grey\\\">\\r\\n    <h2 class=\\\"mat-h2\\\">CRUD Model Builder</h2>\\r\\n\\r\\n    <nav class=\\\"navbar navbar-default\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"listDomains\\\">Domain-List</a>\\r\\n        </li>\\r\\n        <li>\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"listEntities\\\">Domain</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </nav>\\r\\n  </div>\\r\\n  <div style=\\\"box-shadow: 10px 10px 5px grey\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <br>\\r\\n  </div>\\r\\n\\r\\n</div>\"","export default \"<div *ngIf=\\\"domain\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <div class=\\\"panel-title\\\">{{domain.id}}\\n                <button style=\\\"margin-left: 3px\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\"\\n                    mat-mini-fab (click)=\\\"openDialogChangeDomainId()\\\">\\n                    <mat-icon>create</mat-icon>\\n                </button>\\n                <button style=\\\"float: right;\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\"\\n                    mat-mini-fab (click)=\\\"back()\\\">\\n                    <mat-icon>arrow_back</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n\\n        <mat-tab-group>\\n            <mat-tab label=\\\"Entities\\\">\\n\\n                <div class=\\\"panel-body\\\">\\n\\n                    <app-create-entity [domainTid]=\\\"domain.tid\\\" (notify)=\\\"onNotifyEntity($event)\\\"></app-create-entity>\\n\\n                    <div class=\\\"panel panel-primary\\\" *ngIf=\\\"entityDataSource\\\">\\n                        <table cdk-table [dataSource]=\\\"entityDataSource\\\" class=\\\"table table-striped\\\">\\n\\n                            <!-- ID Column -->\\n                            <ng-container cdkColumnDef=\\\"id\\\">\\n                                <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\n                                <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"actions\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Actions </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n\\n                                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEntity(element.tid)\\\">\\n                                        <mat-icon>delete</mat-icon>\\n                                    </button>\\n                                    <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\"\\n                                        (click)=\\\"redirectToEntityDetails(element.tid)\\\">\\n                                        <mat-icon>launch</mat-icon>\\n                                    </button>\\n                                </td>\\n                            </ng-container>\\n\\n                            <tr cdk-header-row *cdkHeaderRowDef=\\\"entityDisplayedColumns\\\"></tr>\\n                            <tr cdk-row *cdkRowDef=\\\"let row; columns: entityDisplayedColumns;\\\"></tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Enums\\\">\\n                <div class=\\\"panel-body\\\">\\n\\n                    <app-create-enum [domainTid]=\\\"domain.tid\\\" (notify)=\\\"onNotifyEnum($event)\\\"></app-create-enum>\\n\\n                    <div class=\\\"panel panel-primary\\\" *ngIf=\\\"enumDataSource\\\">\\n                        <table cdk-table [dataSource]=\\\"enumDataSource\\\" class=\\\"table table-striped\\\">\\n\\n                            <!-- ID Column -->\\n                            <ng-container cdkColumnDef=\\\"id\\\">\\n                                <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\n                                <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"actions\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Actions </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEnum(element.tid)\\\">\\n                                        <mat-icon>delete</mat-icon>\\n                                    </button>\\n                                    <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\"\\n                                        (click)=\\\"redirectToEnumDetails(element.tid)\\\">\\n                                        <mat-icon>launch</mat-icon>\\n                                    </button>\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"delete\\\">\\n                                <th mat-header-cell *matHeaderCellDef> Delete </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteEnum(element.tid)\\\">\\n                                        Delete\\n                                    </button>\\n                                </td>\\n                            </ng-container>\\n\\n                            <tr cdk-header-row *cdkHeaderRowDef=\\\"enumDisplayedColumns\\\"></tr>\\n                            <tr cdk-row *cdkRowDef=\\\"let row; columns: enumDisplayedColumns;\\\"></tr>\\n                        </table>\\n                    </div>\\n\\n                </div>\\n\\n            </mat-tab>\\n\\n        </mat-tab-group>\\n\\n    </div>\\n</div>\"","export default \"<h2 mat-dialog-title> change  domain-id </h2>\\r\\n\\r\\n\\r\\n<mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n\\r\\n    <input required matInput placeholder=\\\"domain-id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  \\r\\n<div mat-dialog-actions>\\r\\n  <button  class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n  <button class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\"  (click)=\\\"save()\\\">Save</button>\\r\\n</div>\"","export default \"<h2>List of domain models</h2>\\n\\n<form #domainForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveDomain()\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Create Domain</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"id.invalid && id.touched\\\">\\n        <label class=\\\"control-label\\\" for=\\\"id\\\">Id</label>\\n        <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"newDomain.id\\\" type=\\\"text\\\" class=\\\"form-control\\\" #id=\\\"ngModel\\\">\\n        <span class=\\\"help-block\\\" *ngIf=\\\"id.invalid && id.touched\\\">Id is required</span>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"domainForm.invalid\\\">Add Domain</button>\\n    </div>\\n\\n  </div>\\n\\n</form>\\n\\n<div class=\\\"panel panel-primary half\\\">\\n  <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\n\\n    <!-- ID Column -->\\n    <ng-container cdkColumnDef=\\\"id\\\">\\n      <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\n      <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n\\n        <button (click)=\\\"redirectToDelete(element.tid)\\\" mat-raised-button color=\\\"warn\\\">\\n          <mat-icon>delete</mat-icon>\\n        </button>\\n        <button (click)=\\\"redirectToDetails(element.tid)\\\" mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\">\\n          <mat-icon>launch</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\"","export default \"<form #entityForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveEntity()\\\">\\r\\n<div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n        <h3 class=\\\"panel-title\\\">Create Entity</h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"id.invalid && id.touched\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"id\\\">Id</label>\\r\\n            <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"domainEntityModel.id\\\" type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\" #id=\\\"ngModel\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"id.invalid && id.touched\\\">Id is required</span>\\r\\n        </div>        \\r\\n    </div>\\r\\n    <div class=\\\"panel-footer\\\">\\r\\n        <button type=\\\"submit\\\" mat-raised-button color = \\\"primary\\\" [disabled]=\\\"entityForm.invalid\\\">Save</button>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n</form>\"","export default \"<div *ngIf=\\\"form\\\">\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <div class=\\\"panel-title\\\" style=\\\"height: 30px;\\\" *ngIf=\\\"entity\\\">\\r\\n                Create Entity Field of Entity {{entity.id}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Id\\\" formControlName=\\\"id\\\" #id>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-checkbox style=\\\"margin-left: 10px\\\" formControlName=\\\"identifier\\\">Identifier</mat-checkbox>\\r\\n                <mat-checkbox style=\\\"margin-left: 10px\\\" formControlName=\\\"optional\\\" *ngIf=\\\"isOptionalFieldVisible()\\\">Optional</mat-checkbox>\\r\\n                <mat-checkbox style=\\\"margin-left: 10px\\\" *ngIf=\\\"isMultipleFieldVisible()\\\" formControlName=\\\"multiple\\\">Multiple</mat-checkbox>\\r\\n\\r\\n                <br>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Select Type\\\" formControlName=\\\"type\\\">\\r\\n                        <mat-option *ngFor=\\\"let fieldType of fieldTypes\\\" [value]=\\\"fieldType[0]\\\">\\r\\n                            {{fieldType[0]}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n                <br>\\r\\n\\r\\n                <mat-form-field *ngIf=\\\"isCardinalityFieldVisible()\\\">\\r\\n                    <mat-select placeholder=\\\"Select Cardinality\\\" formControlName=\\\"cardinality\\\">\\r\\n                        <mat-option *ngFor=\\\"let fieldCardinality of fieldCardinalities\\\" [value]=\\\"fieldCardinality[0]\\\">\\r\\n                            {{fieldCardinality[0]}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <br>\\r\\n\\r\\n                <mat-form-field *ngIf=\\\"isReferenceFieldVisible()\\\">\\r\\n                    <mat-select placeholder=\\\"Select Reference\\\" formControlName=\\\"referenceId\\\">\\r\\n                        <mat-option *ngFor=\\\"let fieldReference of getReferences()\\\" [value]=\\\"fieldReference.id\\\">\\r\\n                            {{fieldReference.id}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n            </mat-dialog-content>\\r\\n\\r\\n\\r\\n            <mat-dialog-actions>\\r\\n                <button class=\\\"mat-raised-button\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\"\\r\\n                    (click)=\\\"saveEntity()\\\">Save</button>\\r\\n            </mat-dialog-actions>\\r\\n            <br>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"entity\\\">\\r\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"domain\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <div class=\\\"panel-title\\\">Domain {{domain.id}} - Entity {{entity.id}}\\r\\n        <button style=\\\"margin-left: 3px\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\" mat-mini-fab\\r\\n          (click)=\\\"openDialogChangeEntityId()\\\">\\r\\n          <mat-icon>create</mat-icon>\\r\\n        </button>\\r\\n        <button style=\\\"float: right;\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\" mat-mini-fab\\r\\n          (click)=\\\"back()\\\">\\r\\n          <mat-icon>arrow_back</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"addField();\\\"\\r\\n      style=\\\"margin-left: 12px;  margin-top: 10px;\\\">Add Field</button>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\" *ngIf=\\\"dataSource\\\">\\r\\n        <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"id\\\">\\r\\n            <th cdk-header-cell *cdkHeaderCellDef> ID </th>\\r\\n            <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"identifier\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> identifier </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.identifier}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"type\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> type </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.type}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"cardinality\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> cardinality </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.cardinality}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"optional\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> optional </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.optional}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"referenceId\\\">\\r\\n            <th mat-header-cell *cdkHeaderCellDef> referenceId </th>\\r\\n            <td mat-cell *cdkCellDef=\\\"let element\\\"> {{element.referenceId}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteField(element.tid)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n              <button mat-raised-button color=\\\"accent\\\" style=\\\"margin-left: 10px\\\" (click)=\\\"redirectToField(element.tid)\\\">\\r\\n                <mat-icon>launch</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"field\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">{{field.id}}</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Field-ID</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.id}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Type</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.type}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Cardinality</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.cardinality}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Optional</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.optional}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Identifier</div>\\r\\n                <div class=\\\"col-xs-8\\\">{{field.identifier}}</div>\\r\\n            </div>            \\r\\n            <div class=\\\"row\\\"  *ngIf=\\\"model\\\">\\r\\n                <div class=\\\"col-xs-4\\\">Reference-ID</div>\\r\\n                <div class=\\\"col-xs-8\\\"><a routerLink=\\\"/displayEntity/{{model.id}}/{{field.referenceId}}\\\">{{field.referenceId}}</a></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<h2 mat-dialog-title> change  entity-id </h2>\\r\\n\\r\\n\\r\\n<mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n\\r\\n    <input required matInput placeholder=\\\"entity-id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  \\r\\n<div mat-dialog-actions>\\r\\n  <button  class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n  <button class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\">Save</button>\\r\\n</div>\"","export default \"\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"domain\\\" class=\\\"domain-label\\\">\\r\\n            Select Domain\\r\\n        </label>\\r\\n        <select id=\\\"domain\\\" name=\\\"domain\\\" [(ngModel)]=\\\"domainTid\\\" required class=\\\"form-control\\\" style = \\\"font-weight:bold; height:40px; font-size: 16px\\\">\\r\\n            <option *ngFor=\\\"let domain of domainList\\\" [value]=\\\"domain.tid\\\">{{domain.id}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n\\r\\n<div *ngIf=\\\"domainTid\\\">\\r\\n\\r\\n    <app-display-domain [domainTid] = \\\"domainTid\\\"  (notify)=\\\"onNotify($event)\\\"></app-display-domain>\\r\\n\\r\\n</div>\"","export default \"\\n<form #enumForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveEnum()\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Create Enum</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"id.invalid && id.touched\\\">\\n                <label class=\\\"control-label\\\" for=\\\"id\\\">Id</label>\\n                <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"domainEnumModel.id\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                    #id=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"id.invalid && id.touched\\\">Id is required</span>\\n            </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"enumForm.invalid\\\">Save</button>\\n        </div>\\n\\n    </div>\\n\\n</form>\\n\"","export default \"<div *ngIf=\\\"enum\\\">\\r\\n  <div class=\\\"panel panel-primary\\\" *ngIf=\\\"domain\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <div class=\\\"panel-title\\\">Domain {{domain.id}} - Enum {{enum.id}}\\r\\n        <button style=\\\"margin-left: 3px\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\" mat-mini-fab\\r\\n          (click)=\\\"openDialog()\\\">\\r\\n          <mat-icon>create</mat-icon>\\r\\n        </button>\\r\\n        <button style=\\\"float: right\\\" [ngStyle]=\\\"{'background-color':'transparent', 'color':'white'}\\\"\\r\\n        mat-mini-fab (click)=\\\"back()\\\">\\r\\n        <mat-icon>arrow_back</mat-icon>\\r\\n    </button>        \\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <form #enumValueForm=\\\"ngForm\\\" (ngSubmit)=\\\"addValue()\\\">\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label\\\" for=\\\"id\\\">Value</label>\\r\\n              <input required id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"newEnumValue\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                #id=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"panel-footer\\\">\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"enumValueForm.invalid\\\" mat-raised-button color=\\\"primary\\\"> Add\\r\\n              Value</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\" *ngIf=\\\"dataSource\\\">\\r\\n        <table cdk-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\">\\r\\n\\r\\n          <ng-container cdkColumnDef=\\\"id\\\">\\r\\n            <th cdk-header-cell *cdkHeaderCellDef> Value </th>\\r\\n            <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteValue(element)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n\\r\\n\\r\\n        <div class=\\\"panel-footer\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveEnum()\\\"> Save</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Change  enum-id </h2>\\r\\n\\r\\n\\r\\n<mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n\\r\\n    <input required matInput placeholder=\\\"enum-id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n  </mat-form-field>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  \\r\\n<div mat-dialog-actions>\\r\\n  <button  class=\\\"mat-raised-button\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n  <button class=\\\"mat-raised-button mat-primary\\\" [disabled]=\\\"form.invalid\\\"  (click)=\\\"save()\\\">Save</button>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'DomainStruct';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ListEntitiesComponent } from './entities/list-entities.component';\r\nimport { CreateEntityComponent } from './entities/create-entity.component';\r\nimport { CreateFieldComponent } from './entities/create-field.component';\r\nimport { EntityService } from './entities/entity.service';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DisplayEntityComponent, EditEntityIdDialog } from './entities/display-entity.component';\r\nimport { DisplayFieldComponent } from './entities/display-field.component';\r\nimport { ListDomainsComponent } from './domains/list-domains.component';\r\nimport { DisplayDomainComponent, EditDomainIdDialog } from './domains/display-domain.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { CreateEnumComponent } from './enum/create-enum.component';\r\nimport { EnumService } from './enum/enum.service';\r\nimport { DisplayEnumComponent, EditEnumIdDialog } from './enum/display-enum.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'listDomains', component: ListDomainsComponent },\r\n  { path: 'listEntities', component: ListEntitiesComponent },\r\n  { path: 'listEntities/:domainTid', component: ListEntitiesComponent },\r\n  { path: 'listEnums/:domainTid', component: ListEntitiesComponent },\r\n  { path: 'displayEntity/:domainTid/:entityTid', component: DisplayEntityComponent },\r\n  { path: 'displayEnum/:domainTid/:enumTid', component: DisplayEnumComponent },\r\n  { path: 'createEntity/:domainTid', component: CreateEntityComponent },\r\n  { path: 'createField/:domainTid/:entityTid', component: CreateFieldComponent },\r\n  { path: 'displayField/:domainTid/:entityTid/:fieldTid', component: CreateFieldComponent },\r\n  { path: '', redirectTo: '/listDomains', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListEntitiesComponent,\r\n    CreateEntityComponent,\r\n    CreateFieldComponent,\r\n    DisplayEntityComponent,\r\n    DisplayEnumComponent,\r\n    DisplayFieldComponent,\r\n    ListDomainsComponent,\r\n    DisplayDomainComponent,\r\n    EditEntityIdDialog,\r\n    EditEnumIdDialog,\r\n    EditDomainIdDialog,\r\n    CreateEnumComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule\r\n  ],\r\n  entryComponents: [\r\n    EditEntityIdDialog,\r\n    EditEnumIdDialog,\r\n    EditDomainIdDialog\r\n  ],\r\n  providers: [\r\n    EntityService,\r\n    EnumService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RvbWFpbnMvZGlzcGxheS1kb21haW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Inject, Output } from '@angular/core';\nimport { DomainModel } from '../model/domain.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EntityService } from '../entities/entity.service';\nimport { DomainService } from './domain.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DialogData } from '../entities/display-entity.component';\nimport { EventEmitter } from '@angular/core';\nimport { EnumService } from '../enum/enum.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-display-domain',\n  templateUrl: './display-domain.component.html',\n  styleUrls: ['./display-domain.component.css']\n})\nexport class DisplayDomainComponent implements OnInit {\n\n  domain: DomainModel;\n  @Input() domainTid: number;\n  @Output() notify = new EventEmitter();\n\n\n  entityDisplayedColumns: string[] = ['id', 'actions'];\n  entityDataSource;\n  enumDisplayedColumns: string[] = ['id', 'actions'];\n  enumDataSource;\n\n  newDomainId: string;\n\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService, private enumService: EnumService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n\n      if (this.domainTid == null) {\n        this.domainTid = +params.get('domainTid');\n      }\n\n      this.domainService.getDomain(this.domainTid).subscribe(\n\n        (response) => {\n          this.domain = response;\n          this.entityDataSource = this.domain.entities;\n\n          console.log(JSON.stringify(this.domain.enums));\n          this.enumDataSource = this.domain.enums;\n        }\n      )\n    });\n\n  }\n\n  ngOnChanges() {\n    this.ngOnInit();\n  }\n\n  onNotifyEntity(entityTid: number) {\n    this.redirectToEntityDetails(entityTid);\n  }\n\n  onNotifyEnum(enumTid: number) {\n    this.redirectToEnumDetails(enumTid);\n  }\n\n\n  addEntity() {\n    this.router.navigate([\"createEntity\", this.domainTid]);\n  }\n\n  deleteEntity(entityTid: number) {\n    this.entityService.deleteEntity(this.domainTid, entityTid).subscribe(data => {\n      console.log(\"data after Post: \" + data);\n      this.domain = null;\n      this.ngOnInit();\n    });\n  }\n\n  deleteEnum(enumTid: number) {\n    this.enumService.deleteEnum(this.domainTid, enumTid).subscribe(data => {\n      console.log(\"data after Post: \" + data);\n      this.domain = null;\n      this.ngOnInit();\n    });\n  }\n\n  redirectToEntityDetails(entityTid: number) {\n    this.router.navigate([\"displayEntity\", this.domainTid, entityTid]);\n  }\n\n  redirectToEnumDetails(enumTid: number) {\n    console.log(\"redirectToEnumDetails enum: \" + enumTid);\n    this.router.navigate([\"displayEnum\", this.domainTid, enumTid]);\n  }\n\n  back() {\n    this.router.navigate([\"listDomains\"]);\n  }\n\n\n  openDialogChangeDomainId(): void {\n    this.newDomainId = this.domain.id;\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = { id: this.newDomainId };\n\n    /*  dialogRef = this.dialog.open(EditDomainIdDialog, {\n       width: '250px',\n       data: { id: this.newDomainId }\n     });*/\n\n    const dialogRef = this.dialog.open(EditDomainIdDialog, dialogConfig);\n\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == null || result == undefined) {\n        return;\n      }\n      this.domain.id = result.id;\n      this.domainService.updateDomain(this.domain).subscribe(data => {\n        console.log(\"data after change Entity: \" + data);\n        this.ngOnInit();\n        this.notify.emit(this.domain.tid);\n      });\n\n    });\n  }\n\n}\n\n@Component({\n  selector: 'edit-domain-id-dialog',\n  templateUrl: 'edit-domain-id-dialog.html',\n})\nexport class EditDomainIdDialog {\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<EditDomainIdDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n\n      this.form = this.fb.group({\n\n      id: [data.id, Validators.required]\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  save(): void {\n    console.log(\"close\");\n    this.dialogRef.close(this.form.value);\n  }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DomainModel } from '../model/domain.model';\nimport { DomainEntityModel } from '../model/entity.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomainService {\n\n  constructor(private http: HttpClient) { }\n\n  public getDomains(): Observable<DomainModel[]> {\n\n    let obs: Observable<DomainModel[]> = this.http.get<DomainModel[]>('https://crud-app-builder.herokuapp.com/tmodels/');\n\n\n    return obs;\n  }\n\n  public getDomain(domainTid: number): Observable<DomainModel> {\n\n    let obs : Observable<DomainModel> = this.http.get<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid);\n  \n  \n    return obs;\n}\n\n  public addDomain(domainModel: DomainModel): Observable<DomainModel> {\n    let obs: Observable<DomainModel> = this.http.post<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/', domainModel);\n    return obs;\n\n  }\n\n  public updateDomain(domainModel: DomainModel) : Observable<DomainModel> {\n\n    console.log(JSON.stringify(domainModel));\n    let obs : Observable<DomainModel> = this.http.put<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainModel.tid,  domainModel);\n    return obs;\n    \n}\n\n\n  public deleteDomain(domainTid: number): Observable<DomainModel> {\n\n    console.log(\"delete Domain \" + domainTid);\n    let obs: Observable<DomainModel> = this.http.delete<DomainModel>('https://crud-app-builder.herokuapp.com/tmodels/' + domainTid);\n    return obs;\n\n  }\n\n  public getEntityById(domainModel: DomainModel, entityId: string) : DomainEntityModel\n  {\n      return domainModel.entities.find(e => e.id == entityId);\n  }\n\n  public getEntityByTid(domainModel: DomainModel, entityTid: number) : DomainEntityModel\n  {\n      return domainModel.entities.find(e => e.tid == entityTid);\n  }\n\n\n}\n","export default \"table {\\r\\n    width: 95%;\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n  \\r\\n  th {\\r\\n    text-align: left;\\r\\n  }\\r\\n  \\r\\n  .half {\\r\\n    width: 50%;   \\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9tYWlucy9saXN0LWRvbWFpbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxVQUFVO0VBQ1oiLCJmaWxlIjoic3JjL2FwcC9kb21haW5zL2xpc3QtZG9tYWlucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDk1JTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIH1cclxuICBcclxuICB0aCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIH1cclxuXHJcbiAgLmhhbGYge1xyXG4gICAgd2lkdGg6IDUwJTsgICBcclxuICB9Il19 */\"","import { DataSource } from '@angular/cdk/collections';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DomainModel } from '../model/domain.model';\nimport { DomainService } from './domain.service';\n\n\n@Component({\n  selector: 'app-list-domains',\n  templateUrl: './list-domains.component.html',\n  styleUrls: ['./list-domains.component.css']\n})\nexport class ListDomainsComponent implements OnInit {\n\n  newDomain: DomainModel;\n\n  domains: DomainModel[];\n\n  displayedColumns: string[] = ['id', 'actions'];\n  dataSource = new DomainListDataSource(this.router, this.domainService);\n\n\n\n  constructor(private router: Router, private domainService: DomainService) { }\n\n  ngOnInit() {\n    this.newDomain = {\n      tid: null,\n      id: null,\n      entities: null,\n      enums: null\n    };\n    this.dataSource = new DomainListDataSource(this.router, this.domainService);\n\n  }\n\n  saveDomain(): void {\n    console.log(this.newDomain);\n\n    this.domainService.addDomain(this.newDomain).subscribe(data => {\n      this.router.navigate([\"listEntities\", data.tid]);\n    });\n\n  }\n\n  public redirectToDetails = (tid: number) => {\n    this.router.navigate([\"listEntities\", tid]);\n  }\n  \n  public redirectToDelete = (tid: number) => {\n    this.domainService.deleteDomain(tid).subscribe(data => {\n      console.log(\"data after Delete: \" + data);\n      this.ngOnInit();\n    });\n  }\n\n  \n\n}\n\n\nexport class DomainListDataSource extends DataSource<DomainModel> {\n\n  data: Observable<DomainModel[]> = (this.domainService.getDomains());\n\n  constructor(private router: Router, private domainService: DomainService) {\n    super();\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<DomainModel[]> {\n    return this.data;\n  }\n\n\n  disconnect() { }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWF0ZS1lbnRpdHkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { EntityService } from './entity.service';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-entity',\r\n  templateUrl: './create-entity.component.html',\r\n  styleUrls: ['./create-entity.component.css']\r\n})\r\nexport class CreateEntityComponent implements OnInit {\r\n\r\n  @Input() domainTid: number = null;\r\n  @Output() notify = new EventEmitter<number>();\r\n\r\n  domainEntityModel: DomainEntityModel = {\r\n    tid: null,\r\n    id: null,\r\n    fields: null\r\n  };\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private _entityService: EntityService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.domainTid == null) {\r\n      this.route.paramMap.subscribe(params => {\r\n        this.domainTid = params.get('domainTid') == null ? null : +params.get('domainTid');\r\n      });\r\n    }\r\n  }\r\n\r\n  saveEntity(): void {\r\n    console.log(this.domainEntityModel);\r\n\r\n    this._entityService.addEntity(this.domainTid, this.domainEntityModel).subscribe(data => {\r\n\r\n      this.domainEntityModel = data;\r\n      this.router.navigate([\"listEntities\", this.domainTid]);\r\n      this.notify.emit(this.domainEntityModel.tid);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWF0ZS1maWVsZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DomainService } from '../domains/domain.service';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { FieldCardinality } from '../model/field.cardinality.model';\r\nimport { DomainEntityFieldModel } from '../model/field.model';\r\nimport { FieldType } from '../model/field.type.model';\r\nimport { RefernceModel as ReferenceModel } from '../model/reference.model';\r\nimport { EntityService } from './entity.service';\r\n\r\nexport interface DialogData {\r\n  domainTid: number;\r\n  enityTid: number;  \r\n  fieldTid: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-field',\r\n  templateUrl: './create-field.component.html',\r\n  styleUrls: ['./create-field.component.css']\r\n})\r\nexport class CreateFieldComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  fieldTypes: [string, FieldType][] = Object.entries(FieldType);\r\n  fieldCardinalities: [string, FieldCardinality][] = Object.entries(FieldCardinality);\r\n\r\n  domain: DomainModel;\r\n\r\n  entityTid: number;\r\n\r\n  fieldTid: number = null;\r\n  fieldId: string = null;\r\n  fieldOptional: boolean = null;\r\n  fieldIdentifier: boolean = null;\r\n  fieldType: FieldType = null;\r\n  fieldMultiple: boolean = null;\r\n  fieldCardinality: FieldCardinality = null;\r\n  fieldReferenceId: string = null;\r\n\r\n  \r\n  entity: DomainEntityModel;\r\n\r\n  fieldNew: boolean = null;\r\n\r\n  constructor( private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService, public dialogRef: MatDialogRef<CreateFieldComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      var domainTid: number;\r\n      if(!this.data.enityTid) {\r\n       this.entityTid = params.get('entityTid') == null ? null : +params.get('entityTid');\r\n       this.fieldTid = params.get('fieldTid') == null ? null : +params.get('fieldTid');\r\n       domainTid = +params.get('domainTid');\r\n      } else {\r\n        this.entityTid = this.data.enityTid;\r\n        this.fieldTid = this.data.fieldTid;\r\n        domainTid =  this.data.domainTid;      \r\n      }\r\n\r\n      this.fieldNew = this.fieldTid == null;\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.domain = response;\r\n\r\n          this.entity = this.domainService.getEntityByTid(this.domain, this.entityTid);\r\n\r\n          if (!this.fieldNew) {\r\n            const field: DomainEntityFieldModel = this.entityService.getField(this.entity, this.fieldTid);\r\n\r\n            this.fieldId = field.id;\r\n            this.fieldOptional = field.optional;\r\n            this.fieldIdentifier = field.identifier;\r\n            this.fieldType = field.type;\r\n            if (field.type == FieldType.ENTITY || field.type == FieldType.ENUM) {\r\n              this.fieldReferenceId = field.referenceId;\r\n            }\r\n            if (field.type == FieldType.ENTITY) {\r\n              this.fieldCardinality = field.cardinality;\r\n            } else {\r\n              this.fieldMultiple = field.cardinality == FieldCardinality.ONE_TO_MANY;\r\n            }\r\n          }\r\n\r\n          this.form = this.fb.group({\r\n\r\n            id: [this.fieldId],\r\n            optional: [this.fieldOptional],\r\n            identifier: [this.fieldIdentifier],\r\n            type: [this.fieldType],\r\n            multiple: [this.fieldMultiple],\r\n            cardinality: [this.fieldCardinality],\r\n            referenceId: [this.fieldReferenceId]\r\n          });\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  getReferences(): ReferenceModel[] {\r\n    if (this.isOfEntityType()) {\r\n      return this.domain.entities;\r\n    } else if (this.isOfEnumType()) {\r\n      return this.domain.enums;\r\n    }\r\n  }\r\n\r\n  isOptionalFieldVisible() {\r\n    return !this.form.get(\"identifier\").value;\r\n  }\r\n\r\n  isCardinalityFieldVisible() {\r\n    return this.isOfEntityType();\r\n  }\r\n\r\n  isReferenceFieldVisible() {\r\n    return this.isOfEntityType() || this.isOfEnumType();\r\n  }\r\n\r\n  isMultipleFieldVisible() {\r\n    return !this.isOfEntityType();\r\n  }\r\n\r\n  isOfEntityType() {\r\n    return this.form.get(\"type\").value == \"ENTITY\";\r\n  }\r\n\r\n  isOfEnumType() {\r\n    return this.form.get(\"type\").value == \"ENUM\";\r\n  }\r\n\r\n  saveEntity(): void {\r\n    const domainEntityFieldModel: DomainEntityFieldModel = new DomainEntityFieldModel();\r\n\r\n    console.log(\"(this.fieldId-- \"+JSON.stringify(this.form.value));\r\n    console.log(\"(this.fieldId-- \"+JSON.stringify(this.form.value.id));\r\n  \r\n    domainEntityFieldModel.tid = this.fieldTid;\r\n    domainEntityFieldModel.id = this.form.value.id;\r\n    domainEntityFieldModel.identifier = this.form.value.identifier;\r\n    domainEntityFieldModel.optional = this.form.value.optional;\r\n    domainEntityFieldModel.type = this.form.value.type;\r\n    if (this.form.value.type == FieldType.ENTITY) {\r\n      domainEntityFieldModel.cardinality = this.form.value.cardinality;\r\n      domainEntityFieldModel.referenceId = this.form.value.referenceId;\r\n    } else if (this.form.value.type == FieldType.ENUM) {\r\n      domainEntityFieldModel.referenceId = this.form.value.referenceId;\r\n    }\r\n\r\n    if (this.form.value.type != FieldType.ENTITY) {\r\n      domainEntityFieldModel.cardinality = this.form.value.multiple ? FieldCardinality[FieldCardinality.ONE_TO_MANY] : FieldCardinality[FieldCardinality.ONE_TO_ONE];\r\n    }\r\n\r\n    if (this.fieldNew) {\r\n      this.entityService.addField(this.domain.tid, this.entityTid, domainEntityFieldModel).subscribe(data => {\r\n        console.log(\"data after Post: \" + data.tid);\r\n        this.leave();\r\n      });\r\n    } else {\r\n      this.entityService.updateField(this.domain.tid, this.entityTid, domainEntityFieldModel).subscribe(data => {\r\n        console.log(\"data after Put: \" + data.tid);\r\n        this.leave();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  private leave() {\r\n    if (this.data) {\r\n      this.dialogRef.close();\r\n    } else {\r\n      this.router.navigate([\"displayEntity\", this.domain.tid, this.entityTid]);\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.leave();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2Rpc3BsYXktZW50aXR5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, Inject } from '@angular/core';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EntityService } from './entity.service';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DomainService } from '../domains/domain.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CreateFieldComponent } from './create-field.component';\r\n\r\n\r\nexport interface DialogData {\r\n  domainTid: number;\r\n  entity: DomainEntityModel;\r\n  id: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-display-entity',\r\n  templateUrl: './display-entity.component.html',\r\n  styleUrls: ['./display-entity.component.css']\r\n})\r\nexport class DisplayEntityComponent implements OnInit {\r\n\r\n  @Input() domain: DomainModel;\r\n  @Input() entity: DomainEntityModel;\r\n  @Output() notify = new EventEmitter();\r\n\r\n  newEntityId: string;\r\n\r\n  // , <!-- \r\n\r\n  displayedColumns: string[] = ['id', 'identifier', 'type', 'cardinality', 'optional', 'referenceId', 'actions'];\r\n  dataSource;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.entity != null) {\r\n      return;\r\n    }\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const domainTid: number = +params.get('domainTid');\r\n      const entityTid: number = +params.get('entityTid');\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.domain = response;\r\n        }\r\n      )\r\n\r\n      this.entityService.getEntity(domainTid, entityTid).subscribe(\r\n\r\n        (response) => {\r\n          this.entity = response;\r\n          this.dataSource = this.entity.fields;\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  addField() {\r\n    console.log(\"add Field \" + this.domain.tid, this.entity.tid);\r\n    //this.router.navigate([\"createField\", this.domain.tid, this.entity.tid]);\r\n    this.redirectToField(null);\r\n  }\r\n\r\n  deleteField(fieldTid: number) {\r\n    this.entityService.deleteField(this.domain.tid, this.entity.tid, fieldTid).subscribe(data => {\r\n      console.log(\"data after Delete: \" + data);\r\n      this.entity = null;\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n  redirectToField(fieldTid: number) {\r\n\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.autoFocus = true;\r\n\r\n    dialogConfig.width = '700px';\r\n    dialogConfig.data = {\r\n      domainTid: this.domain.tid,\r\n      enityTid: this.entity.tid,\r\n      fieldTid: fieldTid\r\n    };\r\n\r\n    const dialogRef = this.dialog.open(CreateFieldComponent, dialogConfig);\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.entity = null;\r\n        this.ngOnInit();\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onNotify() {\r\n    this.entityService.getEntity(this.domain.tid, this.entity.tid).subscribe(data => {\r\n      this.entity = data;\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([\"listEntities\", this.domain.tid]);\r\n  }\r\n\r\n  openDialogChangeEntityId(): void {\r\n    this.newEntityId = this.entity.id;\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = {\r\n      id: this.newEntityId,\r\n      domainTid: this.domain.tid,\r\n      entity: this.entity\r\n    };\r\n\r\n    /*  dialogRef = this.dialog.open(EditDomainIdDialog, {\r\n       width: '250px',\r\n       data: { id: this.newDomainId }\r\n     });*/\r\n\r\n    const dialogRef = this.dialog.open(EditEntityIdDialog, dialogConfig);\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result == null || result == undefined) {\r\n        return;\r\n      }\r\n\r\n\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-entity-id-dialog',\r\n  templateUrl: 'edit-entity-id-dialog.html',\r\n})\r\nexport class EditEntityIdDialog {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private entityService: EntityService,\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<EditEntityIdDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n\r\n    this.form = this.fb.group({\r\n\r\n      id: [data.entity.id, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  save(): void {\r\n    this.data.entity.id = this.form.value.id;\r\n\r\n    this.entityService.updateEntity(this.data.domainTid, this.data.entity).subscribe(data => {\r\n      console.log(\"data after change Entity: \" + JSON.stringify(data));\r\n      this.ngOnInit();\r\n      this.dialogRef.close(this.form.value);\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2Rpc3BsYXktZmllbGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { DomainEntityFieldModel } from '../model/field.model';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { EntityService } from './entity.service';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DomainService } from '../domains/domain.service';\r\n\r\n@Component({\r\n  selector: 'app-display-field',\r\n  templateUrl: './display-field.component.html',\r\n  styleUrls: ['./display-field.component.css']\r\n})\r\n\r\nexport class DisplayFieldComponent implements OnInit {\r\n\r\n  @Input() model: DomainModel;\r\n  @Input() entity: DomainEntityModel;\r\n  @Input() field: DomainEntityFieldModel;\r\n  @Output()  notify = new EventEmitter();\r\n  \r\n  constructor(private route: ActivatedRoute, private domainService: DomainService, private entityService: EntityService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.entity!=null) {\r\n      return;\r\n    }\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const domainTid: number = params.get('domainTid') == null ? null:  +params.get('domainTid');\r\n      const entityTid: number = params.get('entityTid') == null ? null : +params.get('entityTid');\r\n      const fieldTid: number = params.get('fieldTid') == null ? null : +params.get('fieldTid');\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.model = response;\r\n        }\r\n      )\r\n\r\n      this.entityService.getEntity(domainTid, entityTid).subscribe(\r\n\r\n        (response) => {\r\n          this.entity = response;\r\n          this.field = this.entityService.getField(response, fieldTid);\r\n        }\r\n      )\r\n      this.entity\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { DomainEntityFieldModel } from '../model/field.model';\r\n\r\n\r\n@Injectable()\r\nexport class EntityService {\r\n\r\n    constructor(private http: HttpClient) {\r\n       }\r\n\r\n    public getEntity(domainTid: number, entityTid: number): Observable<DomainEntityModel> {\r\n\r\n        let obs : Observable<DomainEntityModel> = this.http.get<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid);\r\n\r\n        return obs;\r\n    }\r\n\r\n    public addEntity(domainTid: number, domainEntityModel: DomainEntityModel) : Observable<DomainEntityModel> {\r\n        let obs : Observable<DomainEntityModel> = this.http.post<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/entities', domainEntityModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public updateEntity(domainTid: number, domainEntityModel: DomainEntityModel) : Observable<DomainEntityModel> {\r\n\r\n        console.log(JSON.stringify(domainEntityModel));\r\n        let obs : Observable<DomainEntityModel> = this.http.put<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/entities/' +domainEntityModel.tid,  domainEntityModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public deleteEntity(domainTid: number, entityTid: number) : Observable<string> {\r\n\r\n        console.log(\"delete Entity \"+entityTid);\r\n        let obs : Observable<string> = this.http.delete<string>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public addField(domainTid: number, entityTid: number, domainEntityFieldModel: DomainEntityFieldModel) : Observable<DomainEntityFieldModel> {\r\n        console.log(JSON.stringify(domainEntityFieldModel));\r\n\r\n        let obs : Observable<DomainEntityFieldModel> = this.http.post<DomainEntityFieldModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid, domainEntityFieldModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public updateField(domainTid: number, entityTid: number, domainEntityFieldModel: DomainEntityFieldModel) : Observable<DomainEntityFieldModel> {\r\n        console.log(JSON.stringify(domainEntityFieldModel));\r\n\r\n        let obs : Observable<DomainEntityFieldModel> = this.http.put<DomainEntityFieldModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid+'/fields/'+domainEntityFieldModel.tid, domainEntityFieldModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n\r\n\r\n    public deleteField(domainTid: number, entityTid: number, fieldTid: number) : Observable<DomainEntityModel> {\r\n\r\n        console.log(\"delete Field \"+entityTid+\"/\"+fieldTid);\r\n        let obs : Observable<DomainEntityModel> = this.http.delete<DomainEntityModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/entities/'+entityTid+\"/fields/\"+fieldTid);\r\n        return obs;\r\n    }\r\n\r\n    public getField(entity: DomainEntityModel, fieldTid: number) : DomainEntityFieldModel\r\n    {\r\n        return entity.fields.find(p => p.tid == fieldTid);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2xpc3QtZW50aXRpZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomainEntityModel } from '../model/entity.model';\r\nimport { EntityService } from './entity.service';\r\nimport { ObservableInput, Observable } from 'rxjs';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DomainService } from '../domains/domain.service';\r\n\r\n@Component({\r\n  templateUrl: './list-entities.component.html',\r\n  styleUrls: ['./list-entities.component.css']\r\n})\r\nexport class ListEntitiesComponent implements OnInit {\r\n\r\n  domainList: DomainModel[];\r\n\r\n  domainTid: number;\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private entityService: EntityService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadDomainList();\r\n    this.route.paramMap.subscribe(params => {\r\n      this.domainTid = params.get('domainTid') == null ? null : +params.get('domainTid');\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  loadDomainList(): void {\r\n    this.domainService.getDomains().subscribe(\r\n\r\n      (response) => {\r\n        this.domainList = response;\r\n        ;\r\n      }\r\n    )\r\n  }\r\n\r\n  addEntity(modelTid: string) {\r\n    console.log(\"add Entity \" + modelTid);\r\n    this.router.navigate([\"createEntity\", modelTid]);\r\n  }\r\n\r\n  onNotify(domainTid: number) {\r\n    this.domainTid = domainTid;\r\n    this.loadDomainList();\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudW0vY3JlYXRlLWVudW0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DomainEnumModel } from '../model/enum.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EnumService } from './enum.service';\n\n@Component({\n  selector: 'app-create-enum',\n  templateUrl: './create-enum.component.html',\n  styleUrls: ['./create-enum.component.css']\n})\nexport class CreateEnumComponent implements OnInit {\n\n  @Input() domainTid: number = null;\n  @Output()  notify = new EventEmitter<number>();\n\n  domainEnumModel: DomainEnumModel = {\n    tid: null,\n    id: null,\n    enumInstances: null\n  };\n\nconstructor(private route: ActivatedRoute, private router: Router,  private enumService: EnumService) { }\n\n  ngOnInit() {\n\n    if (this.domainTid == null) {\n    this.route.paramMap.subscribe(params => {\n      this.domainTid = params.get('domainTid') == null ? null : +params.get('domainTid');\n    });\n  }\n  }\n\n  saveEnum(): void {\n\n    this.enumService.addEnum(this.domainTid, this.domainEnumModel).subscribe(data => {\n\n      this.domainEnumModel = data;\n      this.router.navigate([\"listEnums\", this.domainTid]);\n      this.notify.emit(this.domainEnumModel.tid);\n    });\n\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudW0vZGlzcGxheS1lbnVtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, Inject } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DomainModel } from '../model/domain.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DomainService } from '../domains/domain.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { DomainEnumModel } from '../model/enum.model';\r\nimport { EnumService } from './enum.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { EditEntityIdDialog } from '../entities/display-entity.component';\r\n\r\n\r\nexport interface DialogData {\r\n  id: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-display-enum',\r\n  templateUrl: './display-enum.component.html',\r\n  styleUrls: ['./display-enum.component.css']\r\n})\r\nexport class DisplayEnumComponent implements OnInit {\r\n\r\n  @Input() domain: DomainModel;\r\n  @Input() enum: DomainEnumModel;\r\n  @Output() notify = new EventEmitter();\r\n\r\n  newEnumValue: string = null;\r\n  newEnumId: string = null;\r\n\r\n  displayedColumns: string[] = ['id', 'actions'];\r\n  dataSource;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private domainService: DomainService, private enumService: EnumService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.enum != null) {\r\n      return;\r\n    }\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const domainTid: number = +params.get('domainTid');\r\n      const enumTid: number = +params.get('enumTid');\r\n\r\n      this.domainService.getDomain(domainTid).subscribe(\r\n\r\n        (response) => {\r\n          this.domain = response;\r\n        }\r\n      )\r\n\r\n      this.enumService.getEnum(domainTid, enumTid).subscribe(\r\n\r\n        (response) => {\r\n          this.enum = response;\r\n          this.dataSource = new MatTableDataSource<String>();\r\n          this.dataSource.data = this.enum.enumInstances;\r\n          console.log(JSON.stringify(this.domain));\r\n\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  addValue() {\r\n\r\n    console.log(this.newEnumValue);\r\n\r\n    const index = this.enum.enumInstances.indexOf(this.newEnumValue);\r\n    if (index < 0) {\r\n      this.enum.enumInstances.push(this.newEnumValue);\r\n      console.log(JSON.stringify(this.enum.enumInstances));\r\n      this.dataSource.data = this.enum.enumInstances;\r\n    }\r\n    this.newEnumValue = \"\";\r\n\r\n  }\r\n\r\n  deleteValue(value: string) {\r\n    console.log(value);\r\n    const index = this.enum.enumInstances.indexOf(value);\r\n    if (index > -1) {\r\n      this.enum.enumInstances.splice(index, 1);\r\n      this.dataSource.data = this.enum.enumInstances;\r\n    }\r\n  }\r\n\r\n  onNotify() {\r\n    this.enumService.getEnum(this.domain.tid, this.enum.tid).subscribe(data => {\r\n      this.enum = data;\r\n    });\r\n  }\r\n\r\n  saveEnum() {\r\n\r\n    console.log(JSON.stringify(this.enum));\r\n    this.enumService.updateEnum(this.domain.tid, this.enum).subscribe(data => {\r\n\r\n      this.enum = data;\r\n      this.notify.emit(this.enum.tid);\r\n      this.router.navigate([\"listEnums\", this.domain.tid]);\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([\"listEnums\", this.domain.tid]);\r\n  }\r\n\r\n\r\n\r\n\r\n  openDialog(): void {\r\n    this.newEnumId = this.enum.id;\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = { id: this.newEnumId };\r\n\r\n    /*  dialogRef = this.dialog.open(EditDomainIdDialog, {\r\n       width: '250px',\r\n       data: { id: this.newDomainId }\r\n     });*/\r\n\r\n    const dialogRef = this.dialog.open(EditEnumIdDialog, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      this.enum.id = result.id;\r\n      this.enumService.updateEnum(this.domain.tid, this.enum).subscribe(data => {\r\n        this.ngOnInit();\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-enum-id-dialog',\r\n  templateUrl: 'edit-enum-id-dialog.html',\r\n})\r\nexport class EditEnumIdDialog {\r\n\r\n  form: FormGroup;\r\n  id: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<EditEnumIdDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n    this.id = data.id;\r\n    this.form = this.fb.group({\r\n\r\n      id: [data.id, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(): void {\r\n    console.log(\"close\");\r\n    this.dialogRef.close(this.form.value);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DomainEnumModel } from '../model/enum.model';\r\n\r\n\r\n@Injectable()\r\nexport class EnumService {\r\n\r\n    constructor(private http: HttpClient) {\r\n       }\r\n\r\n    public getEnum(domainTid: number, enumTid: number): Observable<DomainEnumModel> {\r\n\r\n        let obs : Observable<DomainEnumModel> = this.http.get<DomainEnumModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/enums/'+enumTid);\r\n\r\n        return obs;\r\n    }\r\n\r\n    public addEnum(domainTid: number, domainEnumModel: DomainEnumModel) : Observable<DomainEnumModel> {\r\n        if (!domainEnumModel.enumInstances) {\r\n            domainEnumModel.enumInstances = [];\r\n        }\r\n        let obs : Observable<DomainEnumModel> = this.http.post<DomainEnumModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/enums', domainEnumModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public updateEnum(domainTid: number, domainEnumModel: DomainEnumModel) : Observable<DomainEnumModel> {\r\n\r\n        let obs : Observable<DomainEnumModel> = this.http.put<DomainEnumModel>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid +'/enums/' +domainEnumModel.tid,  domainEnumModel);\r\n        return obs;\r\n        \r\n    }\r\n\r\n    public deleteEnum(domainTid: number, enumTid: number) : Observable<string> {\r\n\r\n        console.log(\"delete Enum \"+enumTid);\r\n        let obs : Observable<string> = this.http.delete<string>('https://crud-app-builder.herokuapp.com/tmodels/'+domainTid+'/enums/'+enumTid);\r\n        return obs;\r\n        \r\n    }\r\n}","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","\r\n\r\nexport enum FieldCardinality {\r\n    ONE_TO_ONE = \"ONE_TO_ONE\",\r\n\tONE_TO_MANY = \"ONE_TO_MANY\",\r\n\tMANY_TO_ONE = \"MANY_TO_ONE\",\r\n\tMANY_TO_MANY = \"MANY_TO_MANY\"\r\n}","import { FieldType } from './field.type.model';\r\nimport { FieldCardinality } from './field.cardinality.model';\r\nimport { RefernceModel as ReferenceModel } from './reference.model';\r\n\r\nexport class DomainEntityFieldModel implements  ReferenceModel  {\r\n    tid: number;\r\n    id: string;\r\n    optional: boolean;\r\n    identifier: boolean;\r\n    type: FieldType;\r\n    cardinality: FieldCardinality;\r\n    referenceId: string;\r\n}","export enum FieldType {\r\n\r\n    TEXT=\"TEXT\",\r\n    NUMBER=\"NUMBER\",\r\n    DATE=\"DATE\",\r\n    BOOLEAN=\"BOOLEAN\",\r\n    ENTITY=\"ENTITY\",\r\n    ENUM=\"ENUM\"\r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}